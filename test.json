[
    {
        "Number": 1,
        "TC Number": "TC-BOOT-LK-0001",
        "Category": "Boot",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Set the SW2-2 to ON (USB Boot Mode)",
            "2) Power on the Target board",
            "3) Tytpe the command in Host PC (Linux)",
            "$\u00a0cd\u00a0images/euto-v920-sadk/linux/usbboot",
            "$ ./eub_simple.exe",
            "4) Type the command in LK shell",
            "] scsi\u00a0format\u00a0all",
            "] fast",
            "5)\u00a0Type the command in Host PC (Linux) ",
            "$\u00a0cd\u00a0images/euto-v920-sadk/linux ",
            "$ ./ff_all.sh",
            "6)\u00a0Set the SW2-2 to OFF (UFS Boot Mode) ",
            "7) Reset the Target board"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Target bootup successfully"
        ]
    },
    {
        "Number": 2,
        "TC Number": "TC-BOOT-LK-0002",
        "Category": "Boot",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Set the SW2-2 to ON (USB Boot Mode)",
            "2) Power on the Target board",
            "3) Tytpe the command in Host PC (Linux)",
            "$\u00a0cd\u00a0images/euto-v920-sadk/android/usbboot",
            "$ ./eub_simple",
            "4) Type the command in LK shell",
            "] scsi\u00a0format\u00a0all",
            "] fast",
            "5)\u00a0Type the command in Host PC (Linux) ",
            "$\u00a0cd\u00a0images/euto-v920-sadk/android ",
            "$ ./ff_all.sh",
            "6)\u00a0Set the SW2-2 to OFF (UFS Boot Mode) ",
            "7) Reset the Target board"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Target bootup successfully"
        ]
    },
    {
        "Number": 3,
        "TC Number": "TC-BOOT-LK-0003",
        "Category": "Boot",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Set the SW2-2 to ON (USB Boot Mode)",
            "2) Power on the Target board",
            "3) Tytpe the command in Host PC (Linux)",
            "$\u00a0cd\u00a0images/euto-v920-sadk/linux-android/usbboot",
            "$ ./eub_simple",
            "4) Type the command in LK shell",
            "] scsi\u00a0format\u00a0all",
            "] fast",
            "5)\u00a0Type the command in Host PC (Linux) ",
            "$\u00a0cd\u00a0images/euto-v920-sadk/linux-android ",
            "$ ./ff_all.sh",
            "6)\u00a0Set the SW2-2 to OFF (UFS Boot Mode) ",
            "7) Reset the Target board"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Target bootup successfully"
        ]
    },
    {
        "Number": 4,
        "TC Number": "TC-BOOT-LIN-0001",
        "Category": "Boot",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Change the Linux shell ",
            "[Linux] ''Ctrl+Shift+F2\" and \"Enter\"",
            "[Windows]\"Shift+F2\" and \"Enter\"",
            "2) Type the command in Linux shell\"",
            "$ pwd"
        ],
        "Criterion": [
            "[PASS] ",
            "White console text with black bg is shown"
        ]
    },
    {
        "Number": 5,
        "TC Number": "TC-BOOT-AND-0001",
        "Category": "Boot",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Change the Android shell ",
            "[Linux] \"Ctrl+Shift+F3\" and \"Enter\"",
            "[Windows]\"Shift+F3\" and \"Enter\"",
            "2)\u00a0Type the command in Android shell",
            "$\u00a0su",
            "#\u00a0pwd"
        ],
        "Criterion": [
            "[PASS] ",
            "Green console text with black bg is shown"
        ]
    },
    {
        "Number": 6,
        "TC Number": "TC-BOOT-LIN-0002",
        "Category": "Boot",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$\u00a0ls -l /dev/ttySAC0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Response is like below:",
            "crw------- 1 root tty 204, 64 Jan  1 12:07 /dev/ttySAC0"
        ]
    },
    {
        "Number": 7,
        "TC Number": "TC-BOOT-AND-0002",
        "Category": "Boot",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0ls -l /dev/ttySAC0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Response is like below:",
            "crw------- 1 root root 204,  64 XXXX-XX-XX 00:00 /dev/ttySAC0"
        ]
    },
    {
        "Number": 8,
        "TC Number": "TC-BOOT-LIN-0003",
        "Category": "Boot",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$ vshutdown -r 3"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "If Type the vshutdown command in SYS domain, AND domain reboot normally.",
            "ex)",
            "debug-snapshot dss: core register saved(CPU:1)",
            "debug-snapshot dss: ECC error check erridr_el1.NUM = [0x2]",
            ".... snip",
            "debug-snapshot dss: context saved(CPU:6)",
            "debug-snapshot dss: normal reboot starting",
            "debug-snapshot dss: normal reboot done"
        ]
    },
    {
        "Number": 9,
        "TC Number": "TC-INSYS-LIN-0001",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$\u00a0cat /sys/devices/system/cpu/online"
        ],
        "Criterion": [
            "[PASS] ",
            "CPU Cores are printed to Console as below.",
            "1) In case of BL",
            "0-9",
            "2) In case of LA",
            "0-2"
        ]
    },
    {
        "Number": 10,
        "TC Number": "TC-INSYS-AND-0001",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "# cat /sys/devices/system/cpu/online"
        ],
        "Criterion": [
            "[PASS] ",
            "CPU Cores are printed to Console as below.",
            "1) In case of BA",
            "0-9",
            "2) In case of LA",
            "0-6"
        ]
    },
    {
        "Number": 11,
        "TC Number": "TC-INSYS-LIN-0002",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$ cat /proc/interrupts | grep -i arch_timer"
        ],
        "Criterion": [
            "[PASS] ",
            " Interrupt statistics can be shown from /proc/interrupts.",
            "\"arch_timer\" is shown like below:",
            "X: XXXXX XXXXX GIC-X XX Level arch_timer"
        ]
    },
    {
        "Number": 12,
        "TC Number": "TC-INSYS-LIN-0003",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$ nproc",
            "$ echo 0 > /sys/devices/system/cpu/cpu2/online",
            "$ echo 0 > /sys/devices/system/cpu/cpu1/online",
            "$ nproc",
            "$ cat /sys/devices/system/cpu/offline",
            "$ echo 1 > /sys/devices/system/cpu/cpu1/online",
            "$ echo 1 > /sys/devices/system/cpu/cpu2/online",
            "$ nproc"
        ],
        "Criterion": [
            "[PASS] ",
            "Check nproc command result changed like below",
            "1) In case of BL",
            "10",
            "root@euto-v9-discovery:~# echo 0 > /sys/devices/system/cpu/cpu2/online",
            "root@euto-v9-discovery:~# echo 0 > /sys/devices/system/cpu/cpu1/online",
            "root@euto-v9-discovery:~# nproc",
            "8",
            "root@euto-v9-discovery:~# cat /sys/devices/system/cpu/offline",
            "1-2",
            "root@euto-v9-discovery:~# echo 1 > /sys/devices/system/cpu/cpu1/online",
            "root@euto-v9-discovery:~# echo 1 > /sys/devices/system/cpu/cpu2/online",
            "root@euto-v9-discovery:~# nproc",
            "10",
            "2) In case of LA",
            "root@euto-v9-discovery:~# nproc",
            "3",
            "root@euto-v9-discovery:~# echo 0 > /sys/devices/system/cpu/cpu2/online",
            "root@euto-v9-discovery:~# echo 0 > /sys/devices/system/cpu/cpu1/online",
            "root@euto-v9-discovery:~# nproc",
            "1",
            "root@euto-v9-discovery:~# cat /sys/devices/system/cpu/offline",
            "1-5",
            "root@euto-v9-discovery:~# echo 1 > /sys/devices/system/cpu/cpu1/online",
            "root@euto-v9-discovery:~# echo 1 > /sys/devices/system/cpu/cpu2/online",
            "root@euto-v9-discovery:~# nproc",
            "3"
        ]
    },
    {
        "Number": 13,
        "TC Number": "TC-INSYS-AND-0002",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "$ nproc",
            "$ echo 0 > /sys/devices/system/cpu/cpu2/online",
            "$ echo 0 > /sys/devices/system/cpu/cpu1/online",
            "$ nproc",
            "$ cat /sys/devices/system/cpu/offline",
            "$ echo 1 > /sys/devices/system/cpu/cpu1/online",
            "$ echo 1 > /sys/devices/system/cpu/cpu2/online",
            "$ nproc"
        ],
        "Criterion": [
            "[PASS] ",
            "Check nproc command result changed like below",
            "1) In case of BA",
            "",
            "2) In case of LA",
            "root@euto-v9-discovery:~# nproc",
            "console:/ $ cat /sys/devices/system/cpu/online",
            "0-6",
            "console:/ $ nproc",
            "7",
            "console:/ $ echo 0 > /sys/devices/system/cpu/cpu2/online",
            "console:/ # echo 0 > /sys/devices/system/cpu/cpu2/online",
            "console:/ # echo 0 > /sys/devices/system/cpu/cpu1/online",
            "console:/ # nproc",
            "5",
            "console:/ # cat /sys/devices/system/cpu/offline",
            "1-2",
            "console:/ # echo 1 > /sys/devices/system/cpu/cpu1/online",
            "console:/ # echo 1 > /sys/devices/system/cpu/cpu2/online",
            "127|console:/ # nproc",
            "7"
        ]
    },
    {
        "Number": 14,
        "TC Number": "TC-INSYS-LIN-0004",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0journalctl | grep Clock",
            "$\u00a0journalctl | grep CAL"
        ],
        "Criterion": [
            "[PASS] ",
            ""
        ]
    },
    {
        "Number": 15,
        "TC Number": "TC-INSYS-AND-0003",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0logcat | grep clock"
        ],
        "Criterion": [
            "[PASS] ",
            "Clock information is shown like below",
            "clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x8db30fc66, max_idle_ns: 440795202871 ns",
            "sched_clock: 56 bits at 38MHz, resolution 26ns, wraps every 4398046511099ns",
            "clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns",
            "        : PTP clock support registered",
            "clocksource: Switched to clocksource arch_sys_counter"
        ]
    },
    {
        "Number": 16,
        "TC Number": "TC-INSYS-LIN-0005",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Reboot the system to avoid affection from other test case",
            "2) Type the command in Linux shell",
            "##\u00a0Shutdown SFI",
            "$ sficli pwr shutdown",
            "##\u00a0Put the system to be suspended.",
            "$\u00a0echo -n mem > /sys/power/state",
            "3)\u00a0Confirm if console is not working (S2R completion)",
            "4) Push the XEINT_0_WAKEUP button to wake up the system",
            "5) Type the command in Linux shell",
            "## Check if success count is increased by 1",
            "$\u00a0cat /sys/kernel/debug/suspend_stats",
            "6) Repeat twice step 2) ~ 6).",
            "",
            ""
        ],
        "Criterion": [
            "[PASS] ",
            "Check system to be suspended. Confirm if console is not working. Check that there are no problems during repeat."
        ]
    },
    {
        "Number": 17,
        "TC Number": "TC-INSYS-AND-0004",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Reboot the system to avoid affection from other test case",
            "2) Type the command in Linux shell",
            "##\u00a0Shutdown SFI",
            "$ sficli pwr\u00a0shutdown",
            "##\u00a0Put the system to be suspended.",
            "$\u00a0su",
            "$ s2r suspend",
            "3) Confirm if system is suspended by checking if the display device is off and the console is not working (it takes about 10 seconds or more)",
            "4) Push the XEINT_0_WAKEUP button to wake up the system",
            "5) Type the command in Android shell",
            "## Check if success count is increased by 1",
            "$\u00a0cat\u00a0/sys/kernel/debug/suspend_stats",
            "$ s2r resume",
            "6) Repeat twice step 2) ~ 5)."
        ],
        "Criterion": [
            "[PASS] Check system to be suspended. Confirm if console is not working. Check that there are no problems during repeat."
        ]
    },
    {
        "Number": 18,
        "TC Number": "TC-INSYS-LIN-0006",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1) Reboot the system to avoid affection from other test case",
            "2) Type the command in Linux shell",
            "## Shutdown SFI",
            "$ sficli pwr shutdown",
            "## After setting the wake-up alarm to ring after 20 seconds then,",
            "## put the system to be suspended.",
            "## (It takes at least 10 seconds to suspend in Linux VM.",
            "## It is dependent on Linux framework)",
            "$\u00a0echo -n +20 > /sys/class/rtc/rtc0/wakealarm; echo -n mem > /sys/power/state",
            "## After 20 seconds, check if console is working and",
            "## check if success count is increased by 1.",
            "$\u00a0cat /sys/kernel/debug/suspend_stats",
            "4) Repeat twice step 2)."
        ],
        "Criterion": [
            "[PASS] ",
            "Check system to be suspended and wakeup. Confirm if console is not working. Check that there are no problems during repeat."
        ]
    },
    {
        "Number": null,
        "TC Number": "TC-INSYS-LIN-0013",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Reboot the system to avoid affection from other test case",
            "2) Type the command in Linux shell",
            "## Shutdown SFI",
            "$ sficli pwr shutdown",
            "## After setting the wake-up alarm to ring after 20 seconds then,",
            "## put the system to be suspended.",
            "## (It takes at least 10 seconds to suspend in Linux VM.",
            "## It is dependent on Linux framework)",
            "$\u00a0echo -n +20 > /sys/class/rtc/rtc0/wakealarm; echo -n mem > /sys/power/state",
            "## After 20 seconds, check if console is working and",
            "## check if success count is increased by 1.",
            "$\u00a0cat /sys/kernel/debug/suspend_stats",
            "## Make the Linux VM to resume and check the display device of Linux VM is resumed.",
            "$ s2r resume",
            "3) Check if display devices for each VM shows well.",
            "4) Repeat twice step 2) ~ 3)."
        ],
        "Criterion": [
            "[PASS] ",
            "Check system to be suspended and wakeup. Confirm if console is not working. Check that there are no problems during repeat."
        ]
    },
    {
        "Number": 19,
        "TC Number": "TC-INSYS-AND-0005",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Reboot the system to avoid affection from other test case",
            "2) Type the command in Android shell",
            "## Shutdown SFI",
            "$ sficli pwr\u00a0shutdown",
            "## After setting the wake-up alarm to ring after 20 seconds then, put the system to be suspended.",
            "## (It takes at least 10 seconds to suspend in Android framework service.)",
            "$\u00a0su",
            "$ echo -n \"\"+20\"\" > /sys/class/rtc/rtc0/wakealarm; s2r suspend",
            "## After 20 seconds, check if console is working and check if success",
            "## count is increased by 1.",
            "console:/\u00a0# cat /sys/kernel/debug/suspend_stats",
            "$ s2r resume",
            "3) Repeat twice step 2)"
        ],
        "Criterion": [
            "[PASS] ",
            "Check system to be suspended and wakeup. Confirm if console is not working. Check that there are no problems during repeat."
        ]
    },
    {
        "Number": 20,
        "TC Number": "TC-INSYS-LIN-0007",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$ modprobe dmatest",
            "$echo -n 2000 >/sys/module/dmatest/parameters/timeout",
            "$echo -n 1 >/sys/module/dmatest/parameters/iterations",
            "$echo -n dma0chan0 > /sys/module/dmatest/parameters/channel",
            "$echo -n 1 >/sys/module/dmatest/parameters/run",
            "$ dmesg | grep dma"
        ],
        "Criterion": [
            "[PASS]",
            "\"0 failures\"",
            "dmatest: Added 1 threads using dma0chan0",
            "dmatest: Started 1 threads using dma0chan0",
            "dmatest: dma0chan0-copy0: summary 1 tests, 0 failures XXXX.XX iops XXXXX KB/s (0)",
            "[FAIL]",
            "If the log failures are greater than 1."
        ]
    },
    {
        "Number": 21,
        "TC Number": "TC-INSYS-AND-0006",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "# modprobe -d /vendor/lib/modules dmatest.ko",
            "# echo 1 > /sys/module/dmatest/parameters/iterations",
            "# echo 1 > /sys/module/dmatest/parameters/run",
            "# echo 2000 > /sys/module/dmatest/parameters/timeout",
            "# echo dma0chan0 > /sys/module/dmatest/parameters/channel",
            "# dmesg | grep dma"
        ],
        "Criterion": [
            "[PASS]",
            "\"0 failures\"",
            "",
            "[FAIL]",
            "If the log failures are greater than 1."
        ]
    },
    {
        "Number": 22,
        "TC Number": "TC-INSYS-LIN-0008",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "*\u00a0Read current temperature : 16000 ~ 125000 for all thermal_zones",
            "1)\u00a0Type the command in Linux shell",
            "$cat /sys/class/thermal/thermal_zone0/temp",
            "$cat /sys/class/thermal/thermal_zone1/temp",
            "$cat /sys/class/thermal/thermal_zone2/temp",
            "$cat /sys/class/thermal/thermal_zone3/temp",
            "$cat /sys/class/thermal/thermal_zone4/temp"
        ],
        "Criterion": [
            "[PASS] ",
            "Check that the temperature value is read and is between 16oC(16000) degrees and 125oC(1250-00)degrees."
        ]
    },
    {
        "Number": 23,
        "TC Number": "TC-INSYS-AND-0007",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "*\u00a0Read current temperature : 16000 ~ 125000 for all thermal_zones",
            "1)\u00a0Type the command in Android shell",
            "$ su",
            "$ cat /sys/class/thermal/thermal_zone0/temp",
            "$ cat /sys/class/thermal/thermal_zone1/temp",
            "$ cat /sys/class/thermal/thermal_zone2/temp",
            "$ cat /sys/class/thermal/thermal_zone3/temp",
            "$ cat /sys/class/thermal/thermal_zone4/temp"
        ],
        "Criterion": [
            "[PASS] ",
            "Check that the temperature value is read and is between 16oC(16000) degrees and 125oC(1250-00)degrees."
        ]
    },
    {
        "Number": 24,
        "TC Number": "TC-INSYS-LIN-0009",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command in Linux shell several times",
            "$cat /proc/interrupts | grep arch_timer"
        ],
        "Criterion": [
            "[PASS] ",
            "Check timer interrupt counts each CPU cores like below(Count can be different)",
            "ex)",
            " 11:       6109       6250       7009     GICv3  27 Level     arch_time"
        ]
    },
    {
        "Number": 25,
        "TC Number": "TC-INSYS-AND-0008",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell several times",
            "$\u00a0su",
            "$\u00a0cat /proc/interrupts | grep arch_timer"
        ],
        "Criterion": [
            "[PASS] ",
            "Check timer interrupt counts each CPU cores like below(Count can be differnt )",
            "ex)",
            " 11:      39689      40463      38562      40287      40102      35067      34431     GICv3  27 Level     arch_timer"
        ]
    },
    {
        "Number": 26,
        "TC Number": "TC-INSYS-LIN-0010",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0kill -3 1",
            "2) Wait 30 seconds",
            "3)\u00a0Kernel Panic Occurs"
        ],
        "Criterion": [
            "[PASS]",
            "Check if Kernel Panic Occurs"
        ]
    },
    {
        "Number": 27,
        "TC Number": "TC-INSYS-AND-0009",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "#\u00a0WATCHDOG_PID=`ps -ef | grep -w watchdogd | grep -v \"\\[watchdogd\\]\" | grep -v grep | awk '{print $2}'`",
            "$\u00a0kill -19 ${WATCHDOG_PID}",
            "2) Wait 30 seconds",
            "3)\u00a0Kernel Panic Occurs"
        ],
        "Criterion": [
            "[PASS] ",
            "Check if Kernel Panic Occurs"
        ]
    },
    {
        "Number": 28,
        "TC Number": "TC-INSYS-LIN-0011",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[Test Sequence]",
            "1) Type the command in Linux shell for force panic",
            "$ su",
            "# echo c > /proc/sysrq-trigger",
            "2) When reboot succesfully and \"If you want to skip ramdump, please press Ctrl + c within 5 sec!!\" log is shown, Type ctrl + c to go to lk directly.",
            "",
            "4) Type  below command in Host PC",
            "[Linux Host] $ ./eautodump.py (locate at  sources/tool/ramdump/dumptool)",
            "[Windows Host] $ python eautodump.py",
            "3) wait until all files are extracted"
        ],
        "Criterion": [
            "[PASS] ",
            "No errors while extracting.",
            "",
            "[Expected Result]",
            "No errors while extracting and check the sys domain\u2019s kernel log"
        ]
    },
    {
        "Number": 29,
        "TC Number": "TC-INSYS-LIN-0012",
        "Category": "Internal System",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Push the \"\"WRESET_N\"\" button",
            "2) Type the command \"\"Ctrl + c\"\" and LK-shell",
            "3) Wait 5~10 seconds"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is shown",
            "Finish(0x3ff)!\" message is displayed",
            "",
            "* Note : The hex value 0x3ff can be changed by number of Host AP"
        ]
    },
    {
        "Number": 30,
        "TC Number": "TC-INSYS-AND-0010",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[Test Sequence]",
            "1) Type the command in Android shell for force panic",
            "$\u00a0su",
            "# echo c > /proc/sysrq-trigger",
            "2) When reboot succesfully and \"\"If you want to skip ramdump, please press Ctrl + c within 5 sec!!\"\" log is shown, Type ctrl + c to go to lk directly.",
            "",
            "4) Type  below command in Host PC",
            "[Linux Host] $ ./eautodump.py (locate at  sources/tool/ramdump/dumptool)",
            "[Windows Host] $ python eautodump.py",
            "3) wait until all files are extracted"
        ],
        "Criterion": [
            "[PASS] ",
            "No errors while extracting and check the ivi domain\u2019s kernel log",
            "At least 1 dump file(*.lst) is extracted like below.",
            "ex)",
            " - VM3_first_0xe1610000--0xe180ffff.lst",
            " - IVI_kernel_0xe3c10000--0xe3e0ffff.lst"
        ]
    },
    {
        "Number": 31,
        "TC Number": "TC-INSYS-AND-0011",
        "Category": "Internal System",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Push the \"\"WRESET_N\"\" button",
            "2) Type the command \"\"Ctrl + c\"\" and LK-shell",
            "3) Wait 5~10 seconds"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is shown",
            "Finish(0x3ff)!\" message is displayed",
            "",
            "* Note : The hex value 0x3ff can be changed by number of Host AP"
        ]
    },
    {
        "Number": 32,
        "TC Number": "TC-EXIN-LIN-0001",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "I2C tools (i2cdetect, i2cget, i2cset) can be used for I2C test.",
            "1) Type the command in Linux shell",
            "$ i2cdetect -l",
            "Available I2C Line check.",
            "2) check slave address ",
            "$ i2cdetect -ry [I2CBUS]",
            "Ex) i2cdetect -ry 12",
            "The slave address on the I2C line may change depending on the EVT Version or VM configuration, so check the available I2C Line.",
            "3) i2c value change.",
            "$ i2cget -f -y [I2CBUS] [slave address] [value];",
            "Ex) i2cget -f -y 12 0x40 0x00",
            "0x71",
            "$ i2cset -f -y [I2CBUS] [slave address] [value] w; i2cget -f -y [I2CBUS] [slave address] [value];",
            "Ex) i2cset -f -y 12 0x40 0x00 0x60 w; i2cget -f -y 12 0x40 0x00",
            "0x60"
        ],
        "Criterion": [
            "[PASS]",
            "i2c value changed.",
            ""
        ]
    },
    {
        "Number": 33,
        "TC Number": "TC-EXIN-AND-0001",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "# i2cdetect -l",
            "ex) ",
            "i2c-30  i2c             exynosauto-i2c                          I2C Adapter",
            "i2c-1   i2c             exynosauto-i2c                          I2C Adapter",
            "i2c-29  i2c             exynosauto-i2c                          I2C Adapter",
            "i2c-12  i2c             exynosauto-i2c                          I2C Adapter",
            "i2c-36  i2c             VI2C adapter                            I2C Adapter",
            "",
            "In the above list, i2c-xx --> xx is \"CHIP ADDRESS\"",
            "2) By using \"i2cdetect -r -y [I2CBUS]\" command, find I2CBUS which have valid CHIP-ADDRESS",
            "The slave address on the I2C line may change depending on the EVT Version or VM configuration, so check the available I2C Line.",
            "If there is no value, or value is 'UU\", then the line is un-available.",
            "# i2cdetect -r -y 12",
            "ex)",
            "# i2cdetect -r -y 12",
            "     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f",
            "00:          -- -- -- -- -- -- -- -- -- -- -- -- --",
            "10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "40: 40 -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
            "70: -- -- -- -- -- -- -- --",
            " In this case, slave address : 0x40+0=0x40",
            "",
            "3) Get value (i2cget -f -y [I2CBUS] [slave address] [value])",
            "ex)",
            "# i2cget -f -y 12 0x40 0x00",
            "0x71",
            "",
            "4) Set value (i2cset -f -y [I2CBUS] [slave address] [value] w)",
            "ex)",
            "# i2cset -f -y 12 0x40 0x00 0x60 w",
            "",
            "5) Check value again",
            "ex)",
            "# i2cget -f -y 12 0x40 0x00",
            "0x60"
        ],
        "Criterion": [
            "[PASS]",
            "i2c value changed.",
            ""
        ]
    },
    {
        "Number": 34,
        "TC Number": "TC-EXIN-LIN-0002",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell.",
            "$ find /sys/devices/platform/ -name spidev*",
            "(output)",
            "ex) /sys/devices/platform/10960000.spi/spi_master/spi7/spi7.0/spidev/spidev7.0",
            "The SPI Device name may change depending on the EVT Version or VM configuration, so check the available SPI Device name",
            "2) Change mode parameter of spidev",
            "$ echo 0 > [spidev_node]/spi_dbg",
            "ex) echo 0 > /sys/devices/platform/10960000.spi/spi_dbg",
            "3) spidev test run.",
            "$ spidev_test -D [spidev_name] -p 1234567890 -s 5000 -v",
            "ex) spidev_test -D /dev/spidev7.0 -p 1234567890 -s 5000 -v"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "No command error"
        ]
    },
    {
        "Number": 35,
        "TC Number": "TC-EXIN-AND-0002",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "# spidev_test -D /dev/spidev8.0 -l",
            "*\u00a0UART Loopback test (1sec)"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "spidev_test -D /dev/spidev8.0 -l",
            "spi mode: 0x20",
            "bits per word: 8",
            "max speed: 500000 Hz (500 KHz)"
        ]
    },
    {
        "Number": 36,
        "TC Number": "TC-EXIN-LIN-0003",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ find /dev/ttySAC* ",
            "The UART device may change depending on the EVT Version or VM configuration, so check the available UART device.",
            "2) run serial_test",
            "$ linux-serial-test -p /dev/[tty_dev] -k -o 1 -i 1",
            "Ex) linux-serial-test -p /dev/ttySAC9 -k -o 1 -i 1"
        ],
        "Criterion": [
            "\u203b Please do not care about the sentence in the result \"Error setting RS-232 mode: Inappropriate ioctl for device\"",
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 37,
        "TC Number": "TC-EXIN-AND-0003",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "# find /dev/ttySAC*",
            "",
            "The UART device may change depending on the EVT Version or VM configuration, so check the available UART device.",
            "",
            "2) Type the command in Android shell (linux-serial-test -p /dev/[tty_dev] -k -o 1 -i 1)",
            "# linux-serial-test -p /dev/ttySAC9 -k -o 1 -i 1",
            "Please do not care about the sentence in the result \"Error setting RS-232 mode: Inappropriate ioctl for device\""
        ],
        "Criterion": [
            "\u203b Please do not care about the sentence in the result \"Error setting RS-232 mode: Inappropriate ioctl for device\"",
            "[PASS]\u00a0",
            "Read/Write Success"
        ]
    },
    {
        "Number": 38,
        "TC Number": "TC-EXIN-LIN-0004",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "2)Check whether debugfs is mounted or not",
            "$ mount | grep debugfs",
            "3)If you can't find any mount for debugfs, you can mount it like below",
            "$ mount -t debugfs nodev /sys/kernel/debug",
            "$ cat /sys/kernel/debug/pinctrl/pinctrl-handles",
            "4)read pins knob from each pinctrl groups",
            "$cat /sys/kernel/debug/pinctrl/16450000.pinctrl-samsung-pinctrl/pins",
            "$cat /sys/kernel/debug/pinctrl/16450000.pinctrl-samsung-pinctrl/pinmux-pins",
            "5)check gpio pin via debugfs",
            "$cat /sys/kernel/debug/gpio",
            "6)Control gpio pin via sysfs(Example of gpa0-0)",
            "7)To test wakeup key as assigned to gpio_key, you should unbind gpio_key driver",
            "$ echo -n 'gpiokey-wakeup' > /sys/bus/platform/drivers/gpio-keys/unbind",
            "8)Check the previous value before controlling the pin and Set directrion to output and the value to 1",
            "$ cat /sys/kernel/debug/pinctrl/11850000.pinctrl-samsung-pinctrl/pins | grep gpa0-0",
            "$echo -n 0 > /sys/class/gpio/export",
            "$echo -n out > /sys/class/gpio/gpio0/direction",
            "$cat /sys/kernel/debug/pinctrl/11850000.pinctrl-samsung-pinctrl/pins | grep gpa0-0",
            "$echo -n 1 > /sys/class/gpio/gpio0/value",
            "9) Check the status of DAT. It has changed to 1 (High)",
            "$cat /sys/kernel/debug/pinctrl/11850000.pinctrl-samsung-pinctrl/pins | grep gpa0-0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Check the status of DAT.\u00a0It has changed to \"1\" (High)"
        ]
    },
    {
        "Number": 39,
        "TC Number": "TC-EXIN-AND-0004",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "$ cat /sys/kernel/debug/pinctrl/10830000.pinctrl-samsung-pinctrl/pins",
            "$ cat /sys/kernel/debug/pinctrl/10830000.pinctrl-samsung-pinctrl/pinmux-pins"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Check the status of DAT.\u00a0It has changed to \"1\" (High)"
        ]
    },
    {
        "Number": 40,
        "TC Number": "TC-EXIN-LIN-0005",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "Precondition:",
            "1. Connect m.2 daughter board for\u00a0E key\u00a0to SADK's SSD/BRIDGE board connector.",
            "",
            "1) Type the command in Linux shell",
            "#echo 1 > /sys/devices/platform/163c0000.pcie/pcie_sysfs",
            "$ dmesg | grep pcie",
            "2) Type the command in Linux shell",
            "#echo 2 > /sys/devices/platform/163c0000.pcie/pcie_sysfs",
            "$ dmesg | grep pcie",
            ""
        ],
        "Criterion": [
            "[PASS]",
            "1) response",
            "exynos-v920-pcie 163c0000.pcie: [exynos_v920_pcie_poweron] end of poweron, pcie state: 3",
            "2) response",
            "exynos-v920-pcie 163c0000.pcie: [exynos_v920_pcie_poweroff] start of poweroff, pcie state: 3"
        ]
    },
    {
        "Number": null,
        "TC Number": "TC-EXIN-AND-0016",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "Precondition:",
            "1. Connect m.2 daughter board for\u00a0E key\u00a0to SADK's SSD/BRIDGE board connector.",
            "",
            "1) Type the command in Android shell",
            "$ su",
            "# echo 1 > /sys/devices/platform/163c0000.pcie/pcie_sysfs",
            "$ dmesg | grep pcie",
            "2) Type the command in Andorid shell",
            "# echo 2 > /sys/devices/platform/163c0000.pcie/pcie_sysfs",
            "# dmesg | grep pcie",
            ""
        ],
        "Criterion": [
            "[PASS]",
            "1) response",
            "exynos-v920-pcie 163c0000.pcie: [exynos_v920_pcie_poweron] end of poweron, pcie state: 3",
            "2) response",
            "exynos-v920-pcie 163c0000.pcie: [exynos_v920_pcie_poweroff] start of poweroff, pcie state: 3"
        ]
    },
    {
        "Number": 41,
        "TC Number": "TC-EXIN-LIN-0006",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Check the dts file before build",
            "2) Set the SW5, SW6 to 1G mode",
            "3)\u00a0Plug-in the LAN cable to the board CH0(phy0).",
            "4)\u00a0Type the command in Linux shell",
            "$\u00a0ifconfig eth0 192.168.0.2",
            "$\u00a0ping\u00a0192.168.0.1"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is show."
        ]
    },
    {
        "Number": 42,
        "TC Number": "TC-EXIN-AND-0005",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Check the dts file before build",
            "2) Set the SW5, SW6 to 1G mode",
            "3)\u00a0Plug-in the LAN cable to the board CH1(phy1).",
            "4)\u00a0Type the command in Android shell",
            "$\u00a0su",
            "#\u00a0ifconfig\u00a0eth1 192.168.0.3",
            "#\u00a0ip rule flush",
            "# ip rule add",
            "#\u00a0ping\u00a0192.168.0.1"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is show."
        ]
    },
    {
        "Number": 43,
        "TC Number": "TC-EXIN-AND-0015",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Check the dts file before build",
            "2) Set the SW5, SW6 to 1G mode",
            "3) Plug-in the LAN cable to the board CH1(phy1).",
            "4) Type the command in Linux shell",
            "$ ifconfig eth1 192.168.0.2",
            "$ ethtool --set-eee eth1 eee off",
            "",
            "5) Type the command in Android shell",
            "$ su",
            "# ifconfig eth1 192.168.0.3",
            "# ip rule add",
            "# ip rule flush",
            "# ip rule add",
            "# ping 192.168.0.1 "
        ],
        "Criterion": [
            "[PASS] ",
            "If you see the \"ping: sendmsg: Network is unreachable\" log, repeat step 5.",
            "",
            "Following log is show.",
            ""
        ]
    },
    {
        "Number": 44,
        "TC Number": "TC-EXIN-LIN-0007",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Check the dts file before build",
            "2) Set the SW5, SW6 to 10G mode",
            "3)\u00a0Type the command in Linux shell",
            "$\u00a0ifconfig\u00a0eth0 192.168.0.2 netmask 255.255.255.0 up",
            "$ route add default gw 192.168.0.1",
            "$\u00a0ping\u00a0192.168.0.1"
        ],
        "Criterion": [
            "Expansion Board is needed for working.",
            "[PASS] Following log is show."
        ]
    },
    {
        "Number": 45,
        "TC Number": "TC-EXIN-AND-0006",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Check the dts file before build",
            "2) Set the SW5, SW6 to 10G mode",
            "3) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0ifconfig\u00a0eth0 192.168.0.3 netmask 255.255.255.0 up",
            "$ ip rule add",
            "$\u00a0ping\u00a0192.168.0.1"
        ],
        "Criterion": [
            "Expansion Board is needed for working.",
            "[PASS] Following log is show."
        ]
    },
    {
        "Number": 46,
        "TC Number": "TC-EXIN-LIN-0008",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command in Host PC",
            "$\u00a0iperf3 -s",
            "2)\u00a0Type the command in Linux shell",
            "$ifconfig eth0 192.168.0.2",
            "$iperf3 -c 192.168.0.1 -t5 -O1"
        ],
        "Criterion": [
            "[PASS] ",
            "Data transmitt is success like below. ",
            "(Bandwidth can be different)",
            "",
            "",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "Number": 47,
        "TC Number": "TC-EXIN-AND-0007",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command in Host PC with Administrator",
            "$\u00a0iperf3 -s",
            "2)\u00a0Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0ifconfig\u00a0eth0 192.168.0.3",
            "$ ip rule add",
            "$ iperf3 -c 192.168.0.1 -t5 -O1"
        ],
        "Criterion": [
            "[PASS] Following log is show."
        ]
    },
    {
        "Number": 48,
        "TC Number": "TC-EXIN-LIN-0009",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0ifconfig\u00a0vnet23_0 10.23.0.2 up",
            "2) Type the command in Android shell",
            "$\u00a0su",
            "# ifconfig vnet32_0 10.23.0.3 up",
            "# ip rule add",
            "# ping -c 10 10.23.0.2",
            "3) Type the command in Linux shell",
            "$\u00a0ping\u00a0-c 10 10.23.0.3"
        ],
        "Criterion": [
            "[PASS] ",
            "There is no lost packet"
        ]
    },
    {
        "Number": 49,
        "TC Number": "TC-EXIN-LIN-0010",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Pre-condition",
            "1) Type below command and check the list",
            "#cat /dev/input/event",
            "event0  event1",
            "Test sequence",
            "1) Use USB30DRD0(USB TYPE-C#1) as an ADB USB device in VM2 Domain",
            "2) Type the command in Linux shell",
            "# ./host.sh",
            "3) Plug in a USB mouse",
            "4) Type below command and check new event #",
            "#cat /dev/input/event#",
            "5) Move mouse"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Mouse Detecting. you can find your device name when type 'lsusb'",
            "You can check the input by typing 'cat /dev/input/event#' and moving the mouse. or, if screen was already connected, you can find curser."
        ]
    },
    {
        "Number": 50,
        "TC Number": "TC-EXIN-AND-0008",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "To use USB20DRD1 as a USB Host, please write 0 to b_sess and id on sysfs node.",
            "1) Set the DIP SW21 to OFF for Host",
            "2) Connect the mouse to USB 2.0\u00a0Jack#1 port",
            "3) Type the command in Android shell",
            "$ echo 0 > /sys/devices/platform/16800000.usb/b_sess",
            "$\u00a0echo 0 > /sys/devices/platform/16800000.usb/id",
            "$ dmesg | grep Product ",
            "",
            "To use USB20DRD2 as a USB Host, please write 0 to b_sess and id on sysfs node.",
            "4) Set the DIP SW24 to OFF for Host",
            "5) Connect the mouse to USB 2.0\u00a0Jack#2 port",
            "6) Type the command in Android shell",
            "$\u00a0echo 0 > /sys/devices/platform/16900000.usb/b_sess",
            "$\u00a0echo 0 > /sys/devices/platform/16900000.usb/id"
        ],
        "Criterion": [
            "[PASS] ",
            "Mouse Detecting. you can find your device name."
        ]
    },
    {
        "Number": 51,
        "TC Number": "TC-EXIN-LIN-0011",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Use USB20DRD0 as an ADB USB device in VM2 Domain",
            "2) Connect the USB port(USB TYPE-C#2) to Host PC using TYPE-C cable.",
            "3) Type the command in Linux shell",
            "$ ./adb.sh 16700000",
            "4) Type the command in Hos PC",
            "5)\u00a0Run adb push <a file> <target folder>",
            "6) Run adb pull <target folder>",
            "ex)",
            "$ adb push path.JPG /data/",
            "$\u00a0adb pull /data/path.JPG ."
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " adb push / adb pull command work well.",
            ""
        ]
    },
    {
        "Number": 52,
        "TC Number": "TC-EXIN-AND-0009",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Use USB20DRD0 as an ADB USB device in VM3 Domain",
            "2) Connect the USB port(USB TYPE-C#2) to Host PC using TYPE-C cable.",
            "3) Type the command in Hos PC",
            "4)\u00a0Run adb push <a file> <target folder>",
            "5) Run adb pull <target folder>",
            "$ adb push path.JPG /data/",
            "$\u00a0adb pull /data/path.JPG ."
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " adb push / adb pull command work well.",
            ""
        ]
    },
    {
        "Number": 53,
        "TC Number": "TC-EXIN-LIN-0012",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ mkfs.ext4 /dev/disk/by-partlabel/ramdump",
            "$ mkdir /mount_test",
            "$ mount -t ext4 /dev/disk/by-partlabel/ramdump /mount_test",
            "$ mount | grep mount_test"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "<mounted partition device node path> on <mounted folder path>",
            "ex)",
            "dev/sda56 on /mount_test type ext4 (rw,relatime,stripe=128)"
        ]
    },
    {
        "Number": 54,
        "TC Number": "TC-EXIN-AND-0010",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "$ mkfs.ext4 /dev/block/by-name/persist",
            "$\u00a0cd /data",
            "$\u00a0mkdir mount_test",
            "$\u00a0mount /dev/block/by-name/persist mount_test/",
            "$\u00a0mount | grep mount_test"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "<mounted partition device node path> on <mounted folder path>"
        ]
    },
    {
        "Number": 55,
        "TC Number": "TC-EXIN-LIN-0013",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "1) raw R/W",
            "$ dd if=/dev/sda of=/dev/null bs=64k count=400"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Below response is shown.",
            "400+0 records in",
            "400+0 records out",
            "26214400 bytes (26 MB, 25 MiB) copied, xxxxx s, xx GB/s"
        ]
    },
    {
        "Number": 56,
        "TC Number": "TC-EXIN-AND-0011",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Android shell",
            "1)\u00a0raw R/W",
            "$ su",
            "# dd if=/dev/block/sda of=/dev/null bs=64k count=400"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Below response is shown.",
            "400+0 records in",
            "400+0 records out",
            "26214400 bytes (26 MB, 25 MiB) copied, xxxxx s, xx GB/s"
        ]
    },
    {
        "Number": 57,
        "TC Number": "TC-EXIN-LIN-0014",
        "Category": "External Interface",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "1) block R/W",
            "$ iozone -a -i 0 -g 16384 -I"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "iozone test complete."
        ]
    },
    {
        "Number": 58,
        "TC Number": "TC-EXIN-AND-0012",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Android shell",
            "1)\u00a0block R/W",
            "Push iozone_and file to \"\"/data\"\" directory via ADB.",
            "# su",
            "# cd /data",
            "# chmod 777 ./iozone_and",
            "# ./iozone_and -a -i 0 -g 16384 -I"
        ],
        "Criterion": []
    },
    {
        "Number": 59,
        "TC Number": "TC-EXIN-VM-0001",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Reboot Android domain.",
            "$\u00a0reboot",
            "2) Type the command in Linux shell",
            "$ dmesg | grep ufs"
        ],
        "Criterion": [
            "[PASS] ",
            "Check whether following logs are printed.",
            "exynosautov9-ufs 16e00000.ufs: exynosauto_ufsiov_ph_msg_handler: PH receives READY(2)",
            "",
            "exynosautov9-ufs 16e00000.ufs: exynosauto_ufsiov_ph_msg_handler: PH sends COMPLETE to VHs"
        ]
    },
    {
        "Number": 60,
        "TC Number": "TC-EXIN-VM-0002",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[Pre-conditioin]",
            "SW25 set ot off(Connector)",
            "",
            "DP should be connected to Display Monitor.",
            "Check if it is displayed on the Display Monitor.",
            "1) Case 1",
            "\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DP0 & DP1"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "DP0 port of screen show with weston(sys) screen.",
            "DP1 port of screen show with Android screen"
        ]
    },
    {
        "Number": 61,
        "TC Number": "TC-EXIN-LIN-0015",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) check the Virtual(wod)1~2 connector id",
            "$ modetest -D dpu@1 -c | grep 0x0 -B1 (in sys)",
            "$\u00a0modetest -D dpu@2 -c | grep 0x0 -B1 (in sys)",
            "2) Run modetest with DP0 and DP1",
            "$ modetest -v -s {Virtual-1 connector id}:1920x1080 (in sys)",
            "e.g) modetest -v -s 37:1920x1080 -D dpu@1",
            "$ modetest -v -s {Virtual-2 connector id}:1920x1080 (in sys)",
            "e.g) modetest -v -s 37:1920x1080 -D dpu@2",
            "\uba85\ub839\uc5b4 parm \ubc0f \ub3d9\uc791 \ud655\uc778 \ud544\uc694"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "All of screens show with colorbar patten"
        ]
    },
    {
        "Number": 62,
        "TC Number": "TC-EXIN-AND-0013",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Boot with DP1 device",
            "$ su",
            "$ setprop ctl.stop vendor.hwcomposer-2-4",
            "* Check\u00a0the screen, weston on DP1.\u00a01 result.",
            "2) Run with DP1",
            "$\u00a0setprop ctl.start vendor.hwcomposer-2-4",
            "$\u00a0stop",
            "$\u00a0start",
            "* Check\u00a0the screen, android on DP1. 2 result"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "1. All of screens show with weston(sys) screen",
            "2. All of screens show with Android screen"
        ]
    },
    {
        "Number": 63,
        "TC Number": "TC-EXIN-LIN-0016",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0stop the Android hwcomposer",
            "$ su",
            "$ setprop ctl.stop vendor.hwcomposer-2-4",
            "* Check\u00a0the screen. 1 result.",
            "2)\u00a0stop the weston.service",
            "3)\u00a0Check the DP0 connector id and DP-1 connector id",
            "4)\u00a0Run modetest with DP0",
            "$ systemctl stop weston",
            "$ modetest -D dpu@0 -c | grep 0x0 -B1",
            "$\u00a0modetest -v -s {DP0 connector id}:1920x1080 -D dpu@0",
            "e.g) modetest -v -s 44:1920x1080 -D dpu@0 -\u00a0\uba85\ub839\uc5b4 parm \ubc0f \ub3d9\uc791 \ud655\uc778 \ud544\uc694",
            "* Check\u00a0the screen. 2 result.",
            "5)\u00a0Run modetest with DP1",
            "$ modetest -v -s {DP1 connector id}:1920x1080 -D dpu@0 (in sys)",
            "e.g) modetest -v -s 46:1920x1080 -D dpu@0 -\u00a0\uba85\ub839\uc5b4 parm \ubc0f \ub3d9\uc791 \ud655\uc778 \ud544\uc694",
            "* Check\u00a0the screen. 3 result."
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "1. All of screens show with weston(sys) screen",
            "2. DP0 of screens show with colorbar pattern",
            "3. DP1 of screens show with colorbar pattern",
            "4. DP1 of screens show with Android screen"
        ]
    },
    {
        "Number": 64,
        "TC Number": "TC-EXIN-AND-0014",
        "Category": "External Interface",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Boot with DP0 and DP1 device",
            "2) PLUG_OUT and PLUG_IN the DP0 and DP1",
            "3) You can see the screen Android on DP1 and on DP0"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 65,
        "TC Number": "TC-MM-LIN-0001",
        "Category": "Graphic",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[ pre-condition]",
            " Display port should be connected with Monitor.",
            "Once booting is completed, a glmark2 graphics demo application runs automatically in SYS domain.",
            "If you want to execute it manually, follow the guide below.",
            "1) Type the command in Linux shell",
            "$ rm /etc/systemd/system/graphical.target.wants/*",
            "$ reboot",
            "$ export XDG_RUNTIME_DIR=/run/user/root/",
            "$ glmark2-es2-wayland"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is show."
        ]
    },
    {
        "Number": 66,
        "TC Number": "TC-MM-AND-0001",
        "Category": "Graphic",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "# am start -a android.intent.action.MAIN -n com.google.android.car.kitchensink/com.google.android.car.kitchensink.KitchenSinkActivity",
            "2) Do following on application launched by",
            "1) click menu",
            "select cubes test"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Following cubes are shown."
        ]
    },
    {
        "Number": 67,
        "TC Number": "TC-MM-LIN-0002",
        "Category": "Video",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0/usr/share/sc_test.sh"
        ],
        "Criterion": [
            "[PASS] ",
            "Following log is shown",
            "",
            "\"SYS Domain",
            "Those 6 out-* files are generated at /usr/share/vector, as logging messages below.\"",
            "",
            "\"Written to '/usr/share/vector/out-v4l2-bgr32@960x540.img'",
            "Written to '/usr/share/vector/out-v4l2-nv12m@1920x1080.img'",
            "Written to '/usr/share/vector/out-libcsc-bgr32@960x540.img'",
            "Written to '/usr/share/vector/out-libcsc-nv12m@1920x1080.img'",
            "Written to '/usr/share/vector/out-libcsc-nv12m@960x540.img'",
            "Written to '/usr/share/vector/out-libcsc-bgr32@1920x1080.img'\""
        ]
    },
    {
        "Number": 68,
        "TC Number": "TC-MM-AND-0002",
        "Category": "Video",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "$ sh /vendor/etc/scaler/scaler_test_resource/sc_test.sh"
        ],
        "Criterion": [
            "[PASS] Following log is shown",
            "",
            "\"IVI & AND Domain",
            "Those 6 out-* files are generated at '/data/vector/', as logging messages below.\"",
            "",
            "\"Written to '/data/vector/out-v4l2-bgr32@960x540.img'",
            "Written to '/data/vector/out-v4l2-nv12m@1920x1080.img'",
            "Written to '/data/vector/out-libcsc-bgr32@960x540.img'",
            "Written to '/data/vector/out-libcsc-nv12m@1920x1080.img'",
            "Written to '/data/vector/out-libcsc-nv12m@960x540.img'",
            "Written to '/data/vector/out-libcsc-bgr32@1920x1080.img'\""
        ]
    },
    {
        "Number": 69,
        "TC Number": "TC-MM-LIN-0003",
        "Category": "Video",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0/usr/share/video-regression.sh"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "5 Decoders, 3 10bit Decoders, 2 Encoders & 1 10bit ",
            "[FAIL]",
            "0 Decoders, 0 10bit Decoders, 0 Encoders & 0 10bit "
        ]
    },
    {
        "Number": 70,
        "TC Number": "TC-MM-AND-0003",
        "Category": "Video",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$ sh /vendor/etc/video/video-regression_c2utc.sh"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "5 Decoders & 2 Encoders ",
            "[FAIL]",
            "0 Decoders & 0 Encoders FAILED"
        ]
    },
    {
        "Number": 71,
        "TC Number": "TC-MM-LIN-0004",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "",
            "$ cat /proc/asound/cards",
            "$ cat /proc/asound/pcm"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "If you can see below sound card, Audio resources are registered without problem",
            "",
            "0 [exynosauto9sndc]: exynosauto9-snd - exynosauto9-sndcard",
            "exynosauto9-sndcard",
            "root@euto-v920-sadk:~# cat /proc/asound/pcm",
            "00-00: PCM0 Playback (*) : : playback 1",
            "00-01: PCM1 Playback (*) : : playback 1",
            "00-02: PCM2 Playback (*) : : playback 1",
            "00-03: PCM3 Playback (*) : : playback 1",
            "00-04: PCM4 Playback (*) : : playback 1",
            "00-05: PCM5 Playback (*) : : playback 1",
            "00-06: PCM6 Playback (*) : : playback 1",
            "00-07: PCM7 Playback (*) : : playback 1",
            "00-08: PCM8 Playback (*) : : playback 1",
            "00-09: PCM9 Playback (*) : : playback 1",
            "00-10: PCM10 Playback (*) : : playback 1",
            "00-11: PCM11 Playback (*) : : playback 1",
            "00-12: PCM12 Playback (*) : : playback 1",
            "00-13: PCM13 Playback (*) : : playback 1",
            "00-14: PCM14 Playback (*) : : playback 1",
            "00-15: PCM15 Playback (*) : : playback 1",
            "00-16: PCM0 Capture (*) : : capture 1",
            "00-17: PCM1 Capture (*) : : capture 1",
            "00-18: PCM2 Capture (*) : : capture 1",
            "00-19: PCM3 Capture (*) : : capture 1",
            "00-20: PCM4 Capture (*) : : capture 1",
            "00-21: PCM5 Capture (*) : : capture 1",
            "00-22: PCM6 Capture (*) : : capture 1",
            "00-23: PCM7 Capture (*) : : capture 1",
            "00-24: PCM8 Capture (*) : : capture 1",
            "00-25: PCM9 Capture (*) : : capture 1",
            "00-26: PCM10 Capture (*) : : capture 1",
            "00-27: PCM11 Capture (*) : : capture 1",
            "00-28: PCM12 Capture (*) : : capture 1",
            "00-29: PCM13 Capture (*) : : capture 1",
            "00-30: PCM14 Capture (*) : : capture 1",
            "00-31: PCM15 Capture (*) : : capture 1"
        ]
    },
    {
        "Number": 72,
        "TC Number": "TC-MM-AND-0004",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0cat /proc/asound/cards",
            "$\u00a0cat /proc/asound/pcm"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "If you can see below sound card, Audio resources are registered without problem",
            "0 [exynosauto9sndc]: exynosauto9-snd - exynosauto9-sndcard",
            "exynosauto9-sndcard",
            "root@euto-v920-sadk:~# cat /proc/asound/pcm",
            "00-00: PCM0 Playback (*) : : playback 1",
            "00-01: PCM1 Playback (*) : : playback 1",
            "00-02: PCM2 Playback (*) : : playback 1",
            "00-03: PCM3 Playback (*) : : playback 1",
            "00-04: PCM4 Playback (*) : : playback 1",
            "00-05: PCM5 Playback (*) : : playback 1",
            "00-06: PCM6 Playback (*) : : playback 1",
            "00-07: PCM7 Playback (*) : : playback 1",
            "00-08: PCM8 Playback (*) : : playback 1",
            "00-09: PCM9 Playback (*) : : playback 1",
            "00-10: PCM10 Playback (*) : : playback 1",
            "00-11: PCM11 Playback (*) : : playback 1",
            "00-12: PCM12 Playback (*) : : playback 1",
            "00-13: PCM13 Playback (*) : : playback 1",
            "00-14: PCM14 Playback (*) : : playback 1",
            "00-15: PCM15 Playback (*) : : playback 1",
            "00-16: PCM0 Capture (*) : : capture 1",
            "00-17: PCM1 Capture (*) : : capture 1",
            "00-18: PCM2 Capture (*) : : capture 1",
            "00-19: PCM3 Capture (*) : : capture 1",
            "00-20: PCM4 Capture (*) : : capture 1",
            "00-21: PCM5 Capture (*) : : capture 1",
            "00-22: PCM6 Capture (*) : : capture 1",
            "00-23: PCM7 Capture (*) : : capture 1",
            "00-24: PCM8 Capture (*) : : capture 1",
            "00-25: PCM9 Capture (*) : : capture 1",
            "00-26: PCM10 Capture (*) : : capture 1",
            "00-27: PCM11 Capture (*) : : capture 1",
            "00-28: PCM12 Capture (*) : : capture 1",
            "00-29: PCM13 Capture (*) : : capture 1",
            "00-30: PCM14 Capture (*) : : capture 1",
            "00-31: PCM15 Capture (*) : : capture 1"
        ]
    },
    {
        "Number": 73,
        "TC Number": "TC-MM-LIN-0012",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#0",
            "1) Kcontrol",
            "[not use script]",
            "# amixer sset 'ABOX PCM0p RDMA' 'RDMA0'",
            "# amixer sset 'ABOX RDMA0 Expand' 'ASRC Route'",
            "# amixer sset 'ABOX RDMA0 ASRC' 'SIFS'",
            "# amixer sset 'ABOX UAIF2 SPK' 'SIFS0_SET'",
            "[use script]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "2) playback",
            "[not use asim]",
            "# aplay --device plughw:0,0 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "# ./asim playback_config.json 01_song1__48kHz_16b_2ch_18s.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 74,
        "TC Number": "TC-MM-LIN-0013",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#1",
            "1) Kcontrol",
            "[not use script]",
            "# amixer sset 'ABOX PCM1p RDMA' 'RDMA1'",
            "# amixer sset 'ABOX RDMA1 Expand' 'ASRC Route'",
            "# amixer sset 'ABOX RDMA1 ASRC' 'SIFS'",
            "# amixer sset 'ABOX UAIF3 SPK' 'SIFS1_SET'",
            "[use script]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "2) playback",
            "[not use asim]",
            "# aplay --device plughw:0,1 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "# ./asim multiple_2p_config.json 01_song1__48kHz_16b_2ch_18s.wav 11_song2__48kHz_16b_2ch_02m.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 75,
        "TC Number": "TC-MM-LIN-0014",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#2",
            "1) Kcontrol",
            "[not use script]",
            "# amixer sset 'ABOX PCM2p RDMA' 'RDMA2'",
            "# amixer sset 'ABOX RDMA2 Expand' 'ASRC Route'",
            "# amixer sset 'ABOX RDMA2 ASRC' 'SIFS'",
            "# amixer sset 'ABOX UAIF8 SPK' 'SIFS2_SET'",
            "[use script]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "2) playback",
            "[not use asim]",
            "# aplay --device plughw:0,2 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "# ./asim multiple_2p_config.json 01_song1__48kHz_16b_2ch_18s.wav 11_song2__48kHz_16b_2ch_02m.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 76,
        "TC Number": "TC-MM-LIN-0015",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#3",
            "1) Kcontrol",
            "[not use script]",
            "# amixer sset 'ABOX PCM3p RDMA' 'RDMA3'",
            "# amixer sset 'ABOX RDMA3 Expand' 'ASRC Route'",
            "# amixer sset 'ABOX RDMA3 ASRC' 'SIFS'",
            "# amixer sset 'ABOX UAIF9 SPK' 'SIFS3_SET'",
            "[use script]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "2) playback",
            "[not use asim]",
            "# aplay --device plughw:0,3 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "# cd ~/abox-test",
            "# ./enable_ucm.sh v920",
            "# ./asim multiple_2p_config.json 01_song1__48kHz_16b_2ch_18s.wav 11_song2__48kHz_16b_2ch_02m.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 77,
        "TC Number": "TC-MM-LIN-0016",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#0",
            "1) Kcontrol",
            "[not use script]",
            "amixer sset 'ABOX PCM0p RDMA' 'RDMA0'",
            "amixer sset 'ABOX RDMA0 Expand' 'ASRC Route'",
            "amixer sset 'ABOX RDMA0 ASRC' 'SIFS'",
            "amixer sset 'ABOX UAIF2 SPK' 'SIFS0_SET'",
            "[use script]",
            "cd ~/abox-test",
            "./enable_ucm.sh v920",
            "2) Playback",
            "[not use asim]",
            "aplay --device plughw:0,0 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "cd ~/abox-test",
            "./enable_ucm.sh v920",
            "./asim playback_config.json 01_song1__48kHz_16b_2ch_18s.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 78,
        "TC Number": "TC-MM-LIN-0017",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#1",
            "1) Kcontrol",
            "[not use script]",
            "amixer sset 'ABOX PCM1p RDMA' 'RDMA1'",
            "amixer sset 'ABOX RDMA1 Expand' 'ASRC Route'",
            "amixer sset 'ABOX RDMA1 ASRC' 'SIFS'",
            "amixer sset 'ABOX UAIF3 SPK' 'SIFS1_SET'",
            "[use script]",
            "cd ~/abox-test",
            "./enable_ucm.sh v920",
            "2) Playback",
            "not use asim]",
            "aplay --device plughw:0,1 01_song1__48kHz_16b_2ch_18s.wav",
            "[use asim]",
            "cd ~/abox-test",
            "./enable_ucm.sh v920",
            "./asim multiple_2p_config.json 01_song1__48kHz_16b_2ch_18s.wav 11_song2__48kHz_16b_2ch_02m.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 79,
        "TC Number": "TC-MM-AND-0009",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#0",
            "1) Kcontrol",
            "[use script]",
            "$ su",
            "$ sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ su",
            "$ tinymix 'ABOX PCM0p RDMA Route' 'RDMA0'",
            "$ tinymix 'ABOX UAIF2 SPK' 'SIFS0_SET'",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music.wav -d 0",
            ""
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 80,
        "TC Number": "TC-MM-AND-0010",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#1",
            "1) Kcontrol",
            "[use script]",
            "$ su",
            "$ sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ su",
            "$ tinymix 'ABOX PCM1p RDMA Route' 'RDMA1'",
            "$ tinymix 'ABOX UAIF3 SPK' 'SIFS1_SET'",
            "",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music.wav -d 1"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 81,
        "TC Number": "TC-MM-AND-0011",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#2",
            "1) Kcontrol",
            "[use script]",
            "$ su",
            "$ sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ su",
            "$ tinymix 'ABOX PCM2p RDMA Route' 'RDMA2'",
            "$ tinymix 'ABOX UAIF8 SPK' 'SIFS2_SET'",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music.wav -d 2"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 82,
        "TC Number": "TC-MM-AND-0012",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Playback via TAS6424#3",
            "1) Kcontrol",
            "[use script]",
            "$ su",
            "$ sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ su",
            "$ tinymix 'ABOX PCM3p RDMA Route' 'RDMA3'",
            "$ tinymix 'ABOX UAIF9 SPK' 'SIFS3_SET'",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music.wav -d 3"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 83,
        "TC Number": "TC-MM-AND-0013",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Tas6264_2 (CN10)",
            " - Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ tinymix 'ABOX PCM16p RDMA Route' 'RDMA10'",
            "$ tinymix 'ABOX RDMA10 Expand Route' 'ASRC Route'",
            "$ tinymix 'ABOX RDMA10 ASRC Route' 'SIFS'",
            "$ tinymix 'ABOX UAIF8 SPK' 'SIFS10_SET'",
            "- playback",
            "$\u00a0tinyplay /vendor/sample_music.wav -d 0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 84,
        "TC Number": "TC-MM-AND-0014",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "0-1. Set the SW on Base Board",
            "1)     Set the all of SW31, SW28, SW29, SW30, SW32 to OFF",
            "0-2. Set the SW on Audio Expansion Board",
            "1)     Set the all of SW1 to ON (White Dot)",
            "2)     Set the all of SW2, SW3 to OFF",
            "",
            "Tas6264_3 (CN14)",
            "- Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ tinymix 'ABOX PCM17p RDMA Route' 'RDMA11'",
            "$ tinymix 'ABOX RDMA11 Expand Route' 'ASRC Route'",
            "$ tinymix 'ABOX RDMA11 ASRC Route' 'SIFS'",
            "$ tinymix 'ABOX UAIF9 SPK' 'SIFS11_SET'",
            " - playback",
            "$ tinyplay /vendor/sample_music.wav -d 1"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 85,
        "TC Number": "TC-MM-LIN-0006",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "in case of Barematal Linux",
            "[Pre-condition] ",
            "Set the all of SW31 to ON ",
            "1) set Kcontrol",
            "[not use script]",
            "$ amixer sset 'ABOX NSRC0' 'UAIF5 MAIN MIC'",
            "$ amixer sset 'ABOX WDMA0 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM0' 'Reduce Route'",
            "$ amixer sset 'ABOX PCM0c WDMA' 'WDMA0'",
            "[use script]",
            "$ cd ~/abox-test",
            "$ ./enable_ucm.sh v920",
            "",
            "2) capture",
            "[not use asim] ",
            "// record sound to \"recoreded_sound.wav\" via MIC, ",
            "$ arecord --device plughw:0,16 -r 48000 -f S16_LE -c 2 recorded_sound.wav",
            "// playback recorded wav",
            "$ aplay --device plughw:0,0 recorded_sound.wav",
            "[use asim]",
            "// record pre-installed \"01_song1__48kHz_16b_2ch_18s.wav\" to \"recorded_sound.wav\"",
            "$ ./asim capture_bare_config.json 01_song1__48kHz_16b_2ch_18s.wav recorded_sound.wav",
            "// playback recorded wav",
            "$ aplay --device plughw:0,0 recorded_sound.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 86,
        "TC Number": "TC-MM-AND-0015",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) set Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "",
            "[Manual setting]",
            "tinymix 'ABOX NSRC0' 'UAIF5 MAIN MIC'",
            "tinymix 'ABOX PCM0c WDMA Route' 'WDMA0'",
            "tinymix 'ABOX PCM0p RDMA Route' 'RDMA0'",
            "tinymix 'ABOX UAIF2 SPK' 'SIFS0_SET'",
            "",
            "2) capture",
            "$ tinycap /mnt/media_rw/recorded_sound.wav -d 16 -c 2 -r 48000 -b 16",
            "",
            "3) playback via TAS6424#2(CN9)",
            "tinyplay /mnt/media_rw/recorded_sound.wav -d 0",
            ""
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Capturing through the MIC works well, and the recorded wav is output well from the speaker connected to UAIF"
        ]
    },
    {
        "Number": 87,
        "TC Number": "TC-MM-AND-0016",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) set Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "",
            "[Manual setting]",
            "tinymix 'ABOX NSRC10' 'UAIF5 MAIN MIC'",
            "tinymix 'ABOX SIFM10' 'Reduce Route'",
            "tinymix 'ABOX WDMA10 Reduce Route' 'WDMA'",
            "tinymix 'ABOX PCM16c WDMA Route' 'WDMA10'",
            "",
            "2) capture",
            "$ tinycap /mnt/media_rw/recorded_sound.wav -d 16 -c 2 -r 48000 -b 16",
            "",
            "3) playback via TAS6424#2(CN9)",
            "tinyplay /mnt/media_rw/recorded_sound.wav -d 0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Capturing through the MIC works well, and the recorded wav is output well from the speaker connected to UAIF"
        ]
    },
    {
        "Number": 88,
        "TC Number": "TC-MM-LIN-0007",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) set Kcontrol",
            "[not use script]",
            "$ amixer sset 'ABOX PCM1p RDMA' 'RDMA1'",
            "$ amixer sset 'ABOX UAIF3 SPK' 'SIFS1_SET'",
            "$ amixer sset 'ABOX RDMA1 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA1 ASRC' 'ASRC0'",
            "$ amixer sset 'ABOX RDMA1 ASRC PARAM' '16','48000','2'",
            "",
            "2) playback",
            "$\u00a0aplay --device plughw:0,1 12_song1__16kHz_16b_2ch_18s.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 89,
        "TC Number": "TC-MM-AND-0007",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[baremetal Android]",
            "1) set Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "",
            "[Manual setting]",
            "tinymix 'ABOX PCM1p RDMA Route' 'RDMA1'",
            "tinymix 'ABOX UAIF2 SPK' 'SIFS1_SET'",
            "tinymix 'ABOX RDMA1' 'ASRC0'",
            "tinymix 'ABOX RDMA1 ASRC PARAM' '16' '48000' '2' ",
            "",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music_16KHz.wav -d 1",
            "",
            "[Linux Android]",
            "1) set Kcontrol",
            "[use script]",
            "# su",
            "# sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ tinymix 'ABOX PCM17p RDMA Route' 'RDMA11'",
            "$ tinymix 'ABOX UAIF9 SPK' 'SIFS11_SET'",
            "$ tinymix 'ABOX RDMA11 Expand Route' 'ASRC Route'",
            "$ tinymix 'ABOX RDMA11 ASRC Route' 'ASRC8'",
            "$ tinymix 'ABOX RDMA11 ASRC PARAM' '16' '48000' '2'",
            "",
            "2) playback",
            "$\u00a0tinyplay /vendor/sample_music_16KHz.wav -d 1"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 91,
        "TC Number": "TC-MM-LIN-0018",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "[Pre-condition]",
            "Delete below files which are located at \" ~/abot-test/\"",
            "Test01_recorded_sound1_4tx_4rx.wav",
            "Test01_recorded_sound2_4tx_4rx.wav",
            "Test01_recorded_sound3_4tx_4rx.wav",
            "Test01_recorded_sound4_4tx_4rx.wav",
            "",
            "1) Set the SW on Base Board",
            "Set the all of SW31 to ON",
            "",
            "2) set Kcontrol",
            "[not use asim]\"",
            "$ amixer sset 'ABOX PCM4p RDMA' 'RDMA4'",
            "$ amixer sset 'ABOX PCM5p RDMA' 'RDMA5'",
            "$ amixer sset 'ABOX PCM6p RDMA' 'RDMA6'",
            "$ amixer sset 'ABOX PCM7p RDMA' 'RDMA7'",
            "$ amixer sset 'ABOX PCM1c WDMA' 'WDMA1'",
            "$ amixer sset 'ABOX PCM2c WDMA' 'WDMA2'",
            "$ amixer sset 'ABOX PCM3c WDMA' 'WDMA3'",
            "$ amixer sset 'ABOX PCM4c WDMA' 'WDMA4'",
            "$ amixer sset 'ABOX UAIF0 SPK' 'SIFS4_SET'",
            "$ amixer sset 'ABOX UAIF0 2TX SPK' 'SIFS5_SET'",
            "$ amixer sset 'ABOX UAIF0 3TX SPK' 'SIFS6_SET'",
            "$ amixer sset 'ABOX UAIF0 4TX SPK' 'SIFS7_SET'",
            "$ amixer sset 'ABOX NSRC1' 'UAIF1 MAIN MIC'",
            "$ amixer sset 'ABOX NSRC2' 'UAIF1 SEC MIC'",
            "$ amixer sset 'ABOX NSRC3' 'UAIF1 THIRD MIC'",
            "$ amixer sset 'ABOX NSRC4' 'UAIF1 FOURTH MIC'",
            "$ amixer sset 'ABOX RDMA4 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA4 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA5 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA5 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA6 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA6 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA7 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA7 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX SIFM1',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA1 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM2',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA2 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM3',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA3 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM4',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA4 Reduce',0 'WDMA'",
            "[use asim]",
            "$ cd ~/abox-test",
            "$ ./enable_ucm.sh v920",
            "",
            "3) playback/capture",
            "[not use asim]",
            "$ aplay --device plughw:0,4 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,5 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,6 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,7 01_song1__48kHz_16b_2ch_18s.wav | arecord --device plughw:0,17 -r 48000 -f S16_LE -c 2 Test01_recorded_sound1_4tx_4rx.wav | arecord --device plughw:0,18 -r 48000 -f S16_LE -c 2 Test01_recorded_sound2_4tx_4rx.wav | arecord --device plughw:0,19 -r 48000 -f S16_LE -c 2 Test01_recorded_sound3_4tx_4rx.wav | arecord --device plughw:0,20 -r 48000 -f S16_LE -c 2 Test01_recorded_sound4_4tx_4rx.wav",
            "[use asim]",
            "$ ./asim multiple_4lane_loopback_i2s_config.json 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav Test01_recorded_sound1_4tx_4rx.wav Test01_recorded_sound2_4tx_4rx.wav Test01_recorded_sound3_4tx_4rx.wav Test01_recorded_sound4_4tx_4rx.wav",
            "",
            "4) playback",
            "$ aplay Test01_recorded_sound1_4tx_4rx.wav",
            "$ aplay Test01_recorded_sound2_4tx_4rx.wav",
            "$\u00a0aplay Test01_recorded_sound3_4tx_4rx.wav",
            "$ aplay Test01_recorded_sound4_4tx_4rx.wav "
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. ",
            "Note.",
            "After \"Playback done!\" msg, ",
            "\"read error: Input/output error\" msg could be ignored.",
            ""
        ]
    },
    {
        "Number": 92,
        "TC Number": "TC-MM-LIN-0019",
        "Category": "Audio",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "[Pre-condition]",
            "Delete below files which are located at \" ~/abot-test/\"",
            "Test01_recorded_sound1_4tx_4rx.wav",
            "Test01_recorded_sound2_4tx_4rx.wav",
            "Test01_recorded_sound3_4tx_4rx.wav",
            "Test01_recorded_sound4_4tx_4rx.wav",
            "",
            "1) Set the SW on Base Board",
            "Set the all of SW31 to ON",
            "",
            "2) set Kcontrol",
            "[not use asim]\"",
            "$ amixer sset 'ABOX PCM4p RDMA' 'RDMA4'",
            "$ amixer sset 'ABOX PCM5p RDMA' 'RDMA5'",
            "$ amixer sset 'ABOX PCM6p RDMA' 'RDMA6'",
            "$ amixer sset 'ABOX PCM7p RDMA' 'RDMA7'",
            "$ amixer sset 'ABOX PCM1c WDMA' 'WDMA1'",
            "$ amixer sset 'ABOX PCM2c WDMA' 'WDMA2'",
            "$ amixer sset 'ABOX PCM3c WDMA' 'WDMA3'",
            "$ amixer sset 'ABOX PCM4c WDMA' 'WDMA4'",
            "$ amixer sset 'ABOX UAIF0 SPK' 'SIFS4_SET'",
            "$ amixer sset 'ABOX UAIF0 2TX SPK' 'SIFS5_SET'",
            "$ amixer sset 'ABOX UAIF0 3TX SPK' 'SIFS6_SET'",
            "$ amixer sset 'ABOX UAIF0 4TX SPK' 'SIFS7_SET'",
            "$ amixer sset 'ABOX NSRC1' 'UAIF1 MAIN MIC'",
            "$ amixer sset 'ABOX NSRC2' 'UAIF1 SEC MIC'",
            "$ amixer sset 'ABOX NSRC3' 'UAIF1 THIRD MIC'",
            "$ amixer sset 'ABOX NSRC4' 'UAIF1 FOURTH MIC'",
            "$ amixer sset 'ABOX RDMA4 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA4 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA5 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA5 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA6 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA6 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX RDMA7 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA7 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX SIFM1',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA1 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM2',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA2 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM3',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA3 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM4',0 'Reduce Route'",
            "$ amixer sset 'ABOX WDMA4 Reduce',0 'WDMA'",
            "[use asim]",
            "$ cd ~/abox-test",
            "$ ./enable_ucm.sh v920",
            "",
            "3) playback/capture",
            "[not use asim]",
            "$ aplay --device plughw:0,4 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,5 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,6 01_song1__48kHz_16b_2ch_18s.wav | aplay --device plughw:0,7 01_song1__48kHz_16b_2ch_18s.wav | arecord --device plughw:0,17 -r 48000 -f S16_LE -c 2 Test01_recorded_sound1_4tx_4rx.wav | arecord --device plughw:0,18 -r 48000 -f S16_LE -c 2 Test01_recorded_sound2_4tx_4rx.wav | arecord --device plughw:0,19 -r 48000 -f S16_LE -c 2 Test01_recorded_sound3_4tx_4rx.wav | arecord --device plughw:0,20 -r 48000 -f S16_LE -c 2 Test01_recorded_sound4_4tx_4rx.wav",
            "[use asim]",
            "$ ./asim multiple_4lane_loopback_i2s_config.json 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav 01_song1__48kHz_16b_2ch_18s.wav Test01_recorded_sound1_4tx_4rx.wav Test01_recorded_sound2_4tx_4rx.wav Test01_recorded_sound3_4tx_4rx.wav Test01_recorded_sound4_4tx_4rx.wav",
            "",
            "4) playback",
            "$ aplay Test01_recorded_sound1_4tx_4rx.wav",
            "$ aplay Test01_recorded_sound2_4tx_4rx.wav",
            "$\u00a0aplay Test01_recorded_sound3_4tx_4rx.wav",
            "$ aplay Test01_recorded_sound4_4tx_4rx.wav "
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. ",
            "Note.",
            "After \"Playback done!\" msg, ",
            "\"read error: Input/output error\" msg could be ignored."
        ]
    },
    {
        "Number": 93,
        "TC Number": "TC-MM-AND-0008",
        "Category": "Audio",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "[Pre-Condition]",
            "1) Set the SW on Base Board",
            "Set the all of SW31 to ON",
            "",
            "1) set Kcontrol",
            "[use script]",
            "$ su",
            "$ sh /vendor/enable_tinymix.sh v920",
            "[Manual setting]",
            "$ tinymix 'ABOX PCM0p RDMA Route' 'RDMA0' |",
            "tinymix 'ABOX UAIF2 SPK' 'SIFS0_SET' |",
            "tinymix 'ABOX PCM4p RDMA Route' 'RDMA4' |",
            "tinymix 'ABOX PCM5p RDMA Route' 'RDMA5' |",
            "tinymix 'ABOX PCM6p RDMA Route' 'RDMA6' |",
            "tinymix 'ABOX PCM7p RDMA Route' 'RDMA7' |",
            "tinymix 'ABOX PCM1c WDMA Route' 'WDMA1' |",
            "tinymix 'ABOX PCM2c WDMA Route' 'WDMA2' |",
            "tinymix 'ABOX PCM3c WDMA Route' 'WDMA3' |",
            "tinymix 'ABOX PCM4c WDMA Route' 'WDMA4' |",
            "tinymix 'ABOX UAIF0 SPK' 'SIFS4_SET' |",
            "tinymix 'ABOX UAIF0 2TX SPK' 'SIFS5_SET' |",
            "tinymix 'ABOX UAIF0 3TX SPK' 'SIFS6_SET' |",
            "tinymix 'ABOX UAIF0 4TX SPK' 'SIFS7_SET' |",
            "tinymix 'ABOX NSRC1' 'UAIF1 MAIN MIC' |",
            "tinymix 'ABOX NSRC2' 'UAIF1 SEC MIC' |",
            "tinymix 'ABOX NSRC3' 'UAIF1 THIRD MIC' |",
            "tinymix 'ABOX NSRC4' 'UAIF1 FOURTH MIC'",
            "",
            "",
            "2) playback/capture",
            "$ tinyplay /vendor/sample_music.wav -d 4 | ",
            "tinyplay /vendor/sample_music.wav -d 5 | ",
            "tinyplay /vendor/sample_music.wav -d 6 |",
            "tinyplay /vendor/sample_music.wav -d 7 | ",
            "tinycap /mnt/media_rw/Test01_recorded_sound1_4tx_4rx.wav -d 17 -c 2 -r 48000 -b 16 | ",
            "tinycap /mnt/media_rw/Test01_recorded_sound2_4tx_4rx.wav -d 18 -c 2 -r 48000 -b 16 | ",
            "tinycap /mnt/media_rw/Test01_recorded_sound3_4tx_4rx.wav -d 19 -c 2 -r 48000 -b 16 | ",
            "tinycap /mnt/media_rw/Test01_recorded_sound4_4tx_4rx.wav -d 20 -c 2 -r 48000 -b 16",
            " ",
            " ",
            "3) playback",
            "$ tinyplay /mnt/media_rw/Test01_recorded_sound1_4tx_4rx.wav -d 0",
            "$ tinyplay /mnt/media_rw/Test01_recorded_sound2_4tx_4rx.wav -d 0",
            "$ tinyplay /mnt/media_rw/Test01_recorded_sound3_4tx_4rx.wav -d 0",
            "$ tinyplay /mnt/media_rw/Test01_recorded_sound4_4tx_4rx.wav -d 0"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 94,
        "TC Number": "TC-MM-LIN-0009",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[Pre condition]",
            " - set all SW31 to OFF",
            "",
            "1) set Kcontrol",
            "[use asim]",
            "$ cd ~/abox-test",
            "$ ./enable_ucm.sh v920",
            "Example)",
            "$ echo pcmC0D0p_fw > /sys/devices/platform/1a500000.abox/toggle_pcm_debug",
            "$ echo pcmC0D0p_kernel > /sys/devices/platform/1a500000.abox/toggle_pcm_debug",
            "$ dmesg | grep abox",
            "\u2192 samsung-abox-debug 1a500000.abox:abox_debug@debug: PCM_DUMP READY in FW [pcmC0D0p]",
            "...",
            "$ aplay 01_song1__48kHz_16b_2ch_18s.wav",
            "$ aplay --device hw:0,0 01_song1__48kHz_16b_2ch_18s.wav",
            "$ cd /tmp",
            "$ ls -al",
            "-rw-rw-rw- 1 root root xxxxxxx Jan 1 12:00 abox_dump_[pcmC0D0p-fw].raw",
            "-rw-rw-rw- 1 root root xxxxxxx Jan 1 12:02 abox_dump_[pcmC0D0p-kernel].raw"
        ],
        "Criterion": [
            "[PASS] ",
            "check output below.",
            "$ dmesg | grep abox",
            "\u2192 samsung-abox-debug 1a500000.abox:abox_debug@debug: PCM_DUMP READY in FW [pcmC0D0p]",
            "",
            "$ ls -al",
            "-rw-rw-rw- 1 root root 3624000 Jan 1 12:00 abox_dump_[pcmC0D0p-fw].raw",
            "-rw-rw-rw- 1 root root 3576000 Jan 1 12:02 abox_dump_[pcmC0D0p-kernel].raw",
            ""
        ]
    },
    {
        "Number": 95,
        "TC Number": "TC-MM-LIN-0010",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1) set Kcontrol for Loopback0",
            "[Manual setting]",
            "amixer sset 'ABOX PCM8p RDMA' 'RDMA20'",
            "amixer sset 'ABOX RDMA20 Expand' 'ASRC Route'",
            "amixer sset 'ABOX RDMA20 ASRC' 'SIFS'",
            "amixer sset 'ABOX PCM5c WDMA' 'WDMA20'",
            "amixer sset 'ABOX WDMA20 Reduce',0 'WDMA'",
            "amixer sset 'ABOX SIFM20' 'Reduce Route'",
            "",
            "2) playback",
            "$ cd ~/abox-test",
            "$ aplay --device plughw:0,8 01_song1__48kHz_16b_2ch_18s.wav | arecord --device plughw:0,21 -r 48000 -f S16_LE -c 2 recorded_sound_lp0.wav",
            "$ aplay recorded_sound_lp0.wav",
            "",
            "3) set Kcontrol for Loopback1",
            "[Manual setting]",
            "$ amixer sset 'ABOX PCM9p RDMA' 'RDMA21'",
            "$ amixer sset 'ABOX RDMA21 Expand' 'ASRC Route'",
            "$ amixer sset 'ABOX RDMA21 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX PCM6c WDMA' 'WDMA21'",
            "$ amixer sset 'ABOX WDMA21 Reduce',0 'WDMA'",
            "$ amixer sset 'ABOX SIFM21' 'Reduce Route'",
            "",
            "4) playback",
            "$ cd ~/abox-test",
            "$ aplay --device plughw:0,9 01_song1__48kHz_16b_2ch_18s.wav | arecord --device plughw:0,22 -r 48000 -f S16_LE -c 2 recorded_sound_lp1.wav",
            "$ aplay recorded_sound_lp0.wav"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 96,
        "TC Number": "TC-MM-LIN-0011",
        "Category": "Audio",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) set Kcontrol",
            "[Manual setting]",
            "$ amixer sset 'ABOX PCM0p PP' 'Direct'",
            "$ amixer sset 'ABOX PCM0p RDMA' 'RDMA0'",
            "$ amixer sset 'ABOX RDMA0 Expand' 'Expand'",
            "$ amixer sset 'ABOX RDMA0 ASRC' 'SIFS'",
            "$ amixer sset 'ABOX UAIF2 SPK' 'SIFS0_SET'",
            "",
            "2) playback (CN2)",
            "$\u00a0aplay 02_song1__48kHz_16b_1ch_18s.wav"
        ],
        "Criterion": [
            "[PASS] ",
            "Wav is output well from the speaker connected to UAIF. "
        ]
    },
    {
        "Number": 97,
        "TC Number": "TC-HYP-LIN-0001",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ echo -n 1 > /sys/nk/prop/nk.cpustats.hyp.enable",
            "$ cat /proc/nk/pcpustats"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " Result is like below ( Values can be different )",
            "root@euto-v9-discovery:~# cat /proc/nk/pcpustats",
            "Counting frequency: 38400000 Hz",
            "CPU         Idle          VM1          VM2          VM3          EL3",
            "  0   4079999202     11272057    415683764            0      3771733",
            "  1   4239501485      9300688            0    253372478            0",
            "  2   4298631233      3617268            0    199927428        50036",
            "  3   4270614861      3651219            0    236432660            0",
            "  4   4158997838      1671628    342339791            0      7689364",
            "  5   4285402017      3935736            0    212875055         9147",
            "  6   4331580200      3247648            0    167394157            0",
            "  7   4312433451      3304067            0    194961265            0",
            "  8   4113538573      1503946    383795155            0      3471569",
            "  9   4341954375      3923938            0    156431325            0",
            "In msecs:",
            "  0       106249          293        10825            0           98",
            "  1       110403          242            0         6598            0",
            "  2       111943           94            0         5206            1",
            "  3       111213           95            0         6157            0",
            "  4       108307           43         8915            0          200",
            "  5       111599          102            0         5543            0",
            "  6       112801           84            0         4359            0",
            "  7       112302           86            0         5077            0",
            "  8       107123           39         9994            0           90",
            "  9       113071          102            0         4073            0"
        ]
    },
    {
        "Number": 98,
        "TC Number": "TC-HYP-AND-0001",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "## cat /proc/nk/id; cat /proc/nk/pcpustats;"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " Result is like below ( Values can be different )",
            "console:/ # cat /proc/nk/id",
            "3console:/ # cat /proc/nk/pcpustats",
            "Counting frequency: 38400000 Hz",
            "CPU         Idle          VM1          VM2          VM3          EL3",
            "  0  10378506615     19976840    432369829            0      8253977",
            "  1  10539428200     13694783            0    277432213            0",
            "  2  10622837182      3809455            0    203860079        99820",
            "  3  10595438125      3834765            0    239806451            0",
            "  4  10456910928      1982846    372385983            0      7799500",
            "  5  10604909155      4132403            0    221551912         9147",
            "  6  10641763994      4109844            0    184728875            0",
            "  7  10634300144      3740717            0    201038676            0",
            "  8  10439413725      1605137    386149731            0      3521456",
            "  9  10664915782      4458955            0    161315739            0",
            "In msecs:",
            "  0       270273          520        11259            0          214",
            "  1       274464          356            0         7224            0",
            "  2       276636           99            0         5308            2",
            "  3       275922           99            0         6244            0",
            "  4       272315           51         9697            0          203",
            "  5       276169          107            0         5769            0",
            "  6       277129          107            0         4810            0",
            "  7       276934           97            0         5235            0",
            "  8       271859           41        10055            0           91",
            "  9       277732          116            0         4200            0",
            "console:/ #"
        ]
    },
    {
        "Number": 99,
        "TC Number": "TC-HYP-AND-0002",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command in Linux shell",
            "$\u00a0vshutdown -r 3"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "If Type the vshutdown command in SYS domain, AND domain reboot normally.",
            "ex)",
            "debug-snapshot dss: core register saved(CPU:1)",
            "debug-snapshot dss: ECC error check erridr_el1.NUM = [0x2]",
            ".... snip",
            "debug-snapshot dss: context saved(CPU:6)",
            "debug-snapshot dss: normal reboot starting",
            "debug-snapshot dss: normal reboot done"
        ]
    },
    {
        "Number": 100,
        "TC Number": "TC-HYP-LIN-0002",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0echo -n 1 > /sys/nk/prop/nk.panic-trigger"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "System is reboot and go to ramdump mode.",
            "ex)",
            "... snip",
            "ramdump mode is entire-dram !!!",
            "LK trying to start dump DRAM !!!",
            "If you want to skip ramdump, please press Ctrl + c within 5 sec!!!"
        ]
    },
    {
        "Number": 101,
        "TC Number": "TC-HYP-AND-0003",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0echo -n 1 > /sys/nk/prop/nk.panic-trigger"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "System is reboot and go to ramdump mode.",
            "ex)",
            "... snip",
            "ramdump mode is entire-dram !!!",
            "LK trying to start dump DRAM !!!",
            "If you want to skip ramdump, please press Ctrl + c within 5 sec!!!"
        ]
    },
    {
        "Number": 102,
        "TC Number": "TC-HYP-LIN-0003",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0ifconfig\u00a0vnet23_0 up",
            "$\u00a0ifconfig"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Following logs are shown."
        ]
    },
    {
        "Number": 103,
        "TC Number": "TC-HYP-AND-0004",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0ifconfig\u00a0vnet32_0 up",
            "$\u00a0ifconfig"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Following logs are shown."
        ]
    },
    {
        "Number": 104,
        "TC Number": "TC-HYP-LIN-0004",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$\u00a0cat /proc/nk/id"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "\"2\" will come out on the console.",
            "ex)",
            "root@euto-v9-discovery:~# cat /proc/nk/id",
            "2root@euto-v9-discovery:~#"
        ]
    },
    {
        "Number": 105,
        "TC Number": "TC-HYP-AND-0005",
        "Category": "Hypervisor",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0su",
            "$\u00a0cat\u00a0/proc/nk/id"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "\"3\" will come out on the console.",
            "ex)",
            "console:/ # cat /proc/nk/id",
            "3console:/"
        ]
    },
    {
        "Number": 106,
        "TC Number": "TC-CAM-LIN-0001",
        "Category": "Camera",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) prepare KITT2 SADK Board and camera/display sub board",
            "2) prepare IMX390 2 sensor",
            "3) IMX390 2 sensor connect to dedicated port of camera sub board",
            "4) hdmi are connected to display sub board",
            "5) Type the command in Linux shell",
            "$\u00a0mkdir\u00a0-p\u00a0/run/user/root",
            "$\u00a0export\u00a0XDG_RUNTIME_DIR=/run/user/root",
            "6) Run concurrently",
            "$ cd camera-test/",
            "$ ./secCamera -t /usr/share/libcam/new-test-kitt_920_imx390.j -S 1 -s 0-0 -w 1936 -h 1112 -d 2 &",
            "$ ./secCamera -t /usr/share/libcam/new-test-kitt_920_imx390.j -S 1 -s 0-1 -w 1936 -h 1112 -d 2 &",
            "7) Terminate",
            "$ kill -2 fg %1",
            "$ kill -2 fg %2"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Each stream is displayed on the screen.",
            "",
            "1. Preview image"
        ]
    },
    {
        "Number": 107,
        "TC Number": "TC-CAM-AND-0001",
        "Category": "Camera",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 108,
        "TC Number": "TC-NPU-AND-0001",
        "Category": "NPU",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Push VTS executables to target device",
            "adb push VtsHalNeuralnetworksTargetTest /data/local/tmp/",
            "adb shell chmod 777 /data/local/tmp/VtsHalNeuralnetworksTargetTest",
            "adb shell /data/local/tmp/VtsHalNeuralnetworksTargetTest -- gtest_filter=*"
        ],
        "Criterion": [
            "[PASS] ",
            "No Failures should be reported for VtsHalNeuralnetworksTargetTest VTS Test",
            "[----------] Global test environment tear-down",
            "[==========] 49859 tests from 14 test suites ran. (7618916 ms total)",
            "[ PASSED ] <pass-count> tests.",
            "[ SKIPPED ] <skipped-count> tests"
        ]
    },
    {
        "Number": 109,
        "TC Number": "TC-SEC-LIN-0001",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "dmesg | grep TEE",
            "Check whether there are Trustonic TEE logs",
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "dmesg | grep TEE"
        ],
        "Criterion": [
            "Check whether MobiCore module initialization log (version printing) done well.",
            "",
            "[PASS]\u00a0check the log",
            "[ 3.169262] Trustonic TEE: mobicore_init: MobiCore mcDrvModuleApi version is 9.0",
            ""
        ]
    },
    {
        "Number": 110,
        "TC Number": "TC-SEC-AND-0001",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "dmesg | grep TEE",
            "Check whether there are Trustonic TEE logs",
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "dmesg | grep TEE"
        ],
        "Criterion": [
            "Check whether MobiCore module initialization log (version printing) done well.",
            "",
            "[PASS]\u00a0check the log",
            "[ 3.169262] Trustonic TEE: mobicore_init: MobiCore mcDrvModuleApi version is 9.0",
            ""
        ]
    },
    {
        "Number": 111,
        "TC Number": "TC-SEC-AND-0002",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 112,
        "TC Number": "TC-SEC-AND-0003",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 113,
        "TC Number": "TC-SEC-AND-0004",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 114,
        "TC Number": "TC-SEC-LIN-0002",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "* if target path\u00a0doesn't exsit, create it.",
            "cp /usr/share/trustonic_tee/test/rpmb/rpmb_test_gcc_tbase510a_v007/09090000070100010000000000000000.tlbin /usr/share/trustonic_tee/registry",
            "$ /usr/share/trustonic_tee/test/rpmb/rpmb_test"
        ],
        "Criterion": [
            "*\u00a0For this test, RPMB key needs to be programmed. If RPMB key is NOT programmed, test fails",
            "[PASS] ",
            "check the log. At the end of message, FAILED shall be 0, and the number of PASSED may vary depending on the version of test application",
            "[RPMB][PASSED] 574 tests",
            "[RPMB][FAILED] 0 tests"
        ]
    },
    {
        "Number": 115,
        "TC Number": "TC-SEC-LK-0001",
        "Category": "Security",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Entering LK shell by SW reset (to keep the previous bootlog)",
            "1) Type the command in LK shell",
            "] boot --loglevel=0000003",
            "] bootlog",
            "or",
            "$ cat /sys/kernel/debug/dram_bootlog/bootlog | grep RPMB"
        ],
        "Criterion": [
            "[PASS] ",
            "below messages shall be shown in the bootlog",
            "[RPMB] key blocked successfully"
        ]
    },
    {
        "Number": 116,
        "TC Number": "TC-SEC-LK-0002",
        "Category": "Security",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "(Entering LK by 's' key during coldboot)",
            "1) Type the command in LK shell",
            "]\u00a0rpmb test"
        ],
        "Criterion": [
            "[PASS] ",
            "At the end of message, the FAILED shall be 0.",
            "] rpmb test",
            "ex)",
            "RPMB] successfully set provision state to 0x0",
            "[RPMB] init success",
            "[AVB] init boot header failed 0x7, but continues.",
            "[AVB] avb_get_lock_state() failed 0x40300",
            "  1. Key status shall not be RPMB_KEY_STATUS_UNKNOWN if ldfw is loaded (0x1 != e0x0) [PASSED]",
            "  2. Key shall be unblocked if not programmed (0x0 == e0x0) [PASSED]",
            "  3. Key shall be valid             (0x1 == e0x1) [PASSED]",
            "  4. Read-write test skipped due to key status [SKIPPED]",
            "  5. RPMB Bootmode test skipped due to key status [SKIPPED]",
            "[RPMB][PASSED] 3 tests",
            "[RPMB][SKIPPED] 2 tests",
            "[RPMB][FAILED] 0 tests"
        ]
    },
    {
        "Number": 117,
        "TC Number": "TC-SEC-LIN-0003",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ dmesg | grep rpmb"
        ],
        "Criterion": [
            "[PASS] ",
            "Console message shall NOT show any of below messages",
            "Printed when CONFIG_RPMB_FAIL_ON_HMAC_VALIDATION is NOT turned on",
            "WARNING: CONFIG_RPMB_FAIL_ON_HMAC_VALIDATION MUST be set before production.",
            "Printed when RPMB_AUTO_KEY_PROGRAMMING is NOT turned on or RPMB key is not programmed",
            "**************************************************",
            "* WARNING: RPMB key NOT programmed (degraded security) *",
            "* MUST program rpmb key before the production *",
            "**************************************************"
        ]
    },
    {
        "Number": 118,
        "TC Number": "TC-SEC-AND-0005",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "*\u00a0It must be first boot after fusing.",
            "1) Type the command in Android shell",
            "Step1. Go to android domain",
            "Step2. $ getprop | grep crypto.state",
            "Step3. $ getprop | grep crypto.type",
            "*\u00a0Coldboot and repeat step1,2,3"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "check the log"
        ]
    },
    {
        "Number": 119,
        "TC Number": "TC-SEC-AND-0006",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$\u00a0getprop | grep crypto.metadata"
        ],
        "Criterion": [
            "[PASS]\u00a0check the log"
        ]
    },
    {
        "Number": 120,
        "TC Number": "TC-SEC-LIN-0004",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Linux shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 121,
        "TC Number": "TC-SEC-AND-0007",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 122,
        "TC Number": "TC-SEC-LIN-0005",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Linux shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 123,
        "TC Number": "TC-SEC-AND-0008",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 124,
        "TC Number": "TC-SEC-AND-0009",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "*\u00a0Build with userdebug.",
            "Check the lk boot log",
            "* Entering LK shell by SW reset (Entering by 's' key during coldboot)",
            "1) Type the command in LK shell",
            "] boot --loglevel=0000005",
            "",
            "2) Check 'AVB' in lk-boot log"
        ],
        "Criterion": [
            "[PASS]",
            "Check the log",
            "[RTC: 211.034667][ARCH: 0.549898] [AVB 2.0] authentication success (green)",
            "[RTC: 211.035156][ARCH: 0.550086] Secure boot success"
        ]
    },
    {
        "Number": 125,
        "TC Number": "TC-SEC-LIN-0006",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$ dmesg | grep FMP"
        ],
        "Criterion": [
            "[PASS] ",
            "Check the log",
            "exynosauto-ufs 16e00000.ufs: Exynos FMP Version: 4.1.0",
            "exynosauto-ufs 16f00000.ufs: Exynos FMP Version: 4.1.0"
        ]
    },
    {
        "Number": 126,
        "TC Number": "TC-SEC-AND-0010",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "$ dmesg | grep FMP"
        ],
        "Criterion": [
            "[PASS] ",
            "Check the log",
            "exynosauto-ufs 16e10000.ufs: Exynos FMP Version: 4.1.0",
            "exynosauto-ufs 16e10000.ufs: Exynos FMP quirks: 0x71a7c0",
            "exynosauto-ufs 16f10000.ufs: Exynos FMP Version: 4.1.0",
            "exynosauto-ufs 16f10000.ufs: Exynos FMP quirks: 0x71a7c0"
        ]
    },
    {
        "Number": 127,
        "TC Number": "TC-SEC-AND-0011",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "adb push vts_kernel_encryption_test /data",
            "$ cd /data/vts_kernel_encryption_test/arm64",
            "$ chmod 777 vts_kernel_encryption_test",
            "$ ./vts_kernel_encryption_test"
        ],
        "Criterion": [
            "[PASS]",
            "[ PASSED ] 14 tests."
        ]
    },
    {
        "Number": 128,
        "TC Number": "TC-SEC-AND-0012",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "adb push vts_kernel_encryption_test /data",
            "$ cd /data/vts_kernel_encryption_test/arm64",
            "$ chmod 777 vts_kernel_encryption_test",
            "$ ./vts_kernel_encryption_test"
        ],
        "Criterion": [
            "[PASS]",
            "[ PASSED ] 14 tests."
        ]
    },
    {
        "Number": 129,
        "TC Number": "TC-SEC-LIN-0007",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Linux shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 130,
        "TC Number": "TC-SEC-AND-0013",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "*\u00a0Build with userdebug.",
            "1) Type the command in Android shell",
            "$ su",
            "$\u00a0getprop | grep ro.boot.veritymode"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[ro.boot.veritymode]: [enforcing]"
        ]
    },
    {
        "Number": 131,
        "TC Number": "TC-SEC-LIN-0008",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$ cat /sys/kernel/debug/dram_bootlog/bootlog | grep secure"
        ],
        "Criterion": [
            "[PASS] ",
            "check the log",
            "(hyp_dtb) Secure boot success",
            "(hyp) Secure boot success",
            "(dtb_linux) Secure boot success",
            "(dtbo_linux) Secure boot success",
            "(kernel) Secure boot success"
        ]
    },
    {
        "Number": 132,
        "TC Number": "TC-SEC-LK-0003",
        "Category": "Security",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Entering LK shell by SW reset (Entering by 's' key during coldboot)",
            "1) Type the command in LK shell",
            "] otp test"
        ],
        "Criterion": [
            "[PASS] ",
            "At the end of message,",
            "FAILED and SKIPPED shall be 0, and number of PASSED might vary depending on the version",
            ".....",
            "read_sfi_rom_sec_boot_key_revert 3. check output val (0x0 == e0x0) [PASSED]",
            "read_sfi_rom_sec_boot_key_revert 4. check return (0x85006 == e0x85006) [PASSED]",
            ".....",
            "[OTP][SKIPPED] 0 tests",
            "[OTP][FAILED] 0 tests"
        ]
    },
    {
        "Number": 133,
        "TC Number": "TC-SEC-LK-0004",
        "Category": "Security",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Entering LK shell by SW reset (Entering by 's' key during coldboot)",
            "1) Type the command in LK shell",
            "] otp"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " status value should be \"0\"",
            "Host",
            "- secure boot status: 0",
            "- antirbk status: 0",
            "- antirbk cnt group1 (sec): 0",
            "- antirbk cnt group2 (nsec): 0",
            "- secure jtag status: 0",
            "- chip id: 920",
            "SFI",
            "- sfi secure boot status: 0",
            "- sfi antirbk status: 0",
            "- sfi antirbk cnt: 0",
            "- sfi intmem ecc status: 0",
            "- sfi voltage monitor value: 0",
            "- sfi split mode status: 0",
            "SoC Specifics",
            "- host secure boot key revert: 0x0",
            "- host split mode status: 0",
            "- sfi secure boot key revert: 0x0"
        ]
    },
    {
        "Number": 134,
        "TC Number": "TC-SEC-LIN-0009",
        "Category": "Security",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Linux shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 135,
        "TC Number": "TC-SEC-AND-0014",
        "Category": "Security",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence",
            "1) Type the command in Android shell",
            "## Todo"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 136,
        "TC Number": "TC-SFI-LIN-0001",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "# sficli help",
            "# dmesg |\u00a0grep\u00a0sfi"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "sficli: test returns 0",
            "root@euto-v9-discovery:~# dmesg | grep sfi",
            "[sfi_ipc] sfi_ipc_probe",
            "exynos-sfi-ipc 1c250000.sfi_ipc: sfi_ipc probe",
            "[sfi_ipc] sfi_ipc_reset still probe intsr1:0",
            "[sfi_ipc] sfi_ipc_probe finished",
            "[sfi_ipc_c1] sfi_ipc_c1_probe",
            "exynos-sfi-cr52c1 1c260000.sfi_cr52c1: sfi_ipc core1 probe",
            "[sfi_ipc_c1] sfi_ipc_c1_reset still probe intsr1:0",
            "[sfi_ipc_c1] sfi_ipc_c1_probe finished",
            "exynos-pm 11850000.exynos-pm: no sfi-cpu0-offset. Skip checking sfi cpu status",
            "[sfi_cli] sfi_cli_init",
            "[sfi_cli] cli_ipc_init : dram virtual addr covert success..",
            "[sfi_cli] cli_ipc_init : size of dram : 786476",
            "[sfi_cli] cli_open : ipc ch opened ch No. 1",
            "[sfi_cli] cli_send_dram_addr : dram addr is 0xf6600000",
            "[sfi_cli] cli_send_dram_addr : ipc channel connected",
            "[sfi_dump] sfi_dump_init",
            "sfi_dump sfi_dump: sfi_dump_probe start",
            "sfi_dump sfi_dump: sfi_dump_probe panic-request-mode",
            "[sfi_dump] dump_ch_open : ipc ch opened ch No. 2",
            "[sfi_cli] sfi_cli_ioctl",
            "[sfi_cli] cmd: help",
            "[sfi_cli] cmd length: 5",
            "[sfi_cli] cli_send_dram_addr : dram addr is 0xf6600000",
            "[sfi_cli] cli_send_dram_addr : ipc channel connected",
            "[sfi_cli] cli_cmd_transfer : read tail: 0 write tail 5",
            "[CR-52]  sfilib: SfiLib test command",
            "[sfi_cli] test result : 0"
        ]
    },
    {
        "Number": 136,
        "TC Number": "TC-SFI-LIN-0001",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Android shell",
            "$ su",
            "# sficli help",
            "# dmesg |\u00a0grep\u00a0sfi"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "sficli: test returns 0",
            "root@euto-v9-discovery:~# dmesg | grep sfi",
            "[sfi_ipc] sfi_ipc_probe",
            "exynos-sfi-ipc 1c250000.sfi_ipc: sfi_ipc probe",
            "[sfi_ipc] sfi_ipc_reset still probe intsr1:0",
            "[sfi_ipc] sfi_ipc_probe finished",
            "[sfi_ipc_c1] sfi_ipc_c1_probe",
            "exynos-sfi-cr52c1 1c260000.sfi_cr52c1: sfi_ipc core1 probe",
            "[sfi_ipc_c1] sfi_ipc_c1_reset still probe intsr1:0",
            "[sfi_ipc_c1] sfi_ipc_c1_probe finished",
            "exynos-pm 11850000.exynos-pm: no sfi-cpu0-offset. Skip checking sfi cpu status",
            "[sfi_cli] sfi_cli_init",
            "[sfi_cli] cli_ipc_init : dram virtual addr covert success..",
            "[sfi_cli] cli_ipc_init : size of dram : 786476",
            "[sfi_cli] cli_open : ipc ch opened ch No. 1",
            "[sfi_cli] cli_send_dram_addr : dram addr is 0xf6600000",
            "[sfi_cli] cli_send_dram_addr : ipc channel connected",
            "[sfi_dump] sfi_dump_init",
            "sfi_dump sfi_dump: sfi_dump_probe start",
            "sfi_dump sfi_dump: sfi_dump_probe panic-request-mode",
            "[sfi_dump] dump_ch_open : ipc ch opened ch No. 2",
            "[sfi_cli] sfi_cli_ioctl",
            "[sfi_cli] cmd: help",
            "[sfi_cli] cmd length: 5",
            "[sfi_cli] cli_send_dram_addr : dram addr is 0xf6600000",
            "[sfi_cli] cli_send_dram_addr : ipc channel connected",
            "[sfi_cli] cli_cmd_transfer : read tail: 0 write tail 5",
            "[CR-52]  sfilib: SfiLib test command",
            "[sfi_cli] test result : 0"
        ]
    },
    {
        "Number": 137,
        "TC Number": "TC-SFI-AND-0001",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 138,
        "TC Number": "TC-SFI-LIN-0002",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command",
            "# sficli warnsound\u00a0test\u00a0lite",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] warnsound test lite",
            "[CR-52] END POST",
            "[CR-52]",
            "[CR-52] PASS TEST 1ch 16bit O"
        ]
    },
    {
        "Number": 139,
        "TC Number": "TC-SFI-AND-0002",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1) Type the command",
            "$ sficli warnsound\u00a0test\u00a0lite",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] warnsound test lite",
            "[CR-52] END POST",
            "[CR-52]",
            "[CR-52] PASS TEST 1ch 16bit O"
        ]
    },
    {
        "Number": 140,
        "TC Number": "TC-SFI-LIN-0003",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command",
            "# sficli bic",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] bic",
            "[CR-52] Check Bic transaction Error Count",
            "[CR-52] BIC error cnt total: 0"
        ]
    },
    {
        "Number": 141,
        "TC Number": "TC-SFI-AND-0003",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Type the command",
            "# sficli bic",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] bic",
            "[CR-52] Check Bic transaction Error Count",
            "[CR-52] BIC error cnt total: 0"
        ]
    },
    {
        "Number": 142,
        "TC Number": "TC-SFI-LIN-0004",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command",
            "# sficli clkmon",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] clkmon test",
            "[CR-52] CLKMON0 Mon Init success",
            "[CR-52] CLKMON0 test result == 1 1",
            "[CR-52] CLKMON1 Mon Init success",
            "[CR-52] CLKMON1 test result == 1 1",
            "[CR-52] CLKMON2 Mon Init success",
            "[CR-52] CLKMON2 test result == 1 1",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 143,
        "TC Number": "TC-SFI-AND-0004",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": null,
        "Command": [
            "1) Type the command",
            "$ sficli clkmon",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] clkmon test",
            "[CR-52] CLKMON0 Mon Init success",
            "[CR-52] CLKMON0 test result == 1 1",
            "[CR-52] CLKMON1 Mon Init success",
            "[CR-52] CLKMON1 test result == 1 1",
            "[CR-52] CLKMON2 Mon Init success",
            "[CR-52] CLKMON2 test result == 1 1",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 144,
        "TC Number": "TC-SFI-LIN-0005",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "Only available Bare Linux",
            "Display Daughter Board \uc758 HDMI0 \ub97c \uc5f0\uacb0\ud558\uace0 \ud14c\uc2a4\ud2b8 \ud574\uc57c \ud568.",
            "",
            "$ sficli dpu task",
            "$ sficli dpu enable 0",
            "$ sficli dpu icon 0 0",
            "$ sficli dpu crc 0 0",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[   85.992196] [CR-52] dpu task",
            "[   86.096426] [CR-52] Telltale_SelfTestCompletedNotification_Display0 is called: 1",
            "[   86.192413] [CR-52] Telltale_DeviceReadyNotification_Display0 is called",
            "[   86.296443] [CR-52] Dpu_Test_SelfTestCompletedNotification_Display1 is called: 1",
            "[   86.392421] [CR-52] Dpu_Test_DeviceReadyNotification_Display1 is called",
            "[   86.536434] [CR-52] Dpu_Ext_ST_SelfTestCompletedNotification_Display2 is called: 1",
            "[   86.592449] [CR-52] Dpu_Ext_ST_DeviceReadyNotification_Display2 is called",
            "[   93.088032] [CR-52] dpu enable 0",
            "[   93.092724] [CR-52] Dpu_EnableDevice called: 0 display, ret: 0",
            "[   93.092755] [CR-52] Dpu_UpdateImagePlane called: 0",
            "[   99.695824] [CR-52] dpu icon 0 0",
            "[  107.743929] [CR-52] dpu crc 0 0",
            "[  107.753806] [CR-52] Dpu_GenPreBlenderGoldenCrc called: 0",
            "[  107.753825] [CR-52] Icon 0 pre CRC: xxxxxxxx",
            "[  107.753839] [CR-52] Dpu_SetPreBlenderGoldenCrc called: 0",
            "[  107.754336] [CR-52] Dpu_GenPostBlenderGoldenCrc called: 0",
            "[  107.754358] [CR-52] Icon 0 post CRC: xxxxxxxx",
            "[  107.754374] [CR-52] Dpu_SetPostBlenderGoldenCrc called: 0",
            "[  107.754386] [CR-52] Dpu_EnableCrcCheck called: 0"
        ]
    },
    {
        "Number": 145,
        "TC Number": "TC-SFI-AND-0005",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 146,
        "TC Number": "TC-SFI-LIN-0006",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command",
            "# sficli extwdg status",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] ExtWdg Status",
            "[CR-52] ExtWdg Tik Width: <config value>",
            "[CR-52] ExtWdg Tok Width: <config value>",
            "[CR-52] ExtWdg Tik Fault Count: <config value>",
            "[CR-52] ExtWdg Tok Fault Count: <config value>",
            "[CR-52] ExtWdg DIG1 Debug: 0x00000000",
            "[CR-52] ExtWdg mode: 3",
            "[CR-52] ExtWdg SET1 mode: <config value>",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 147,
        "TC Number": "TC-SFI-AND-0006",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command",
            "$ sficli extwdg status",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] ExtWdg Status",
            "[CR-52] ExtWdg Tik Width: <config value>",
            "[CR-52] ExtWdg Tok Width: <config value>",
            "[CR-52] ExtWdg Tik Fault Count: <config value>",
            "[CR-52] ExtWdg Tok Fault Count: <config value>",
            "[CR-52] ExtWdg DIG1 Debug: 0x00000000",
            "[CR-52] ExtWdg mode: 3",
            "[CR-52] ExtWdg SET1 mode: <config value>",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 148,
        "TC Number": "TC-SFI-LIN-0007",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command",
            "# sficli fmutest flt_ecc 0",
            "# sficli fmutest arq 11",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "@ EVT0/1",
            "[CR-52] fmutest flt_ecc 0",
            "[CR-52] [TX] FAULT[358]: 0x1",
            "[CR-52] fmutest arq 11",
            "[CR-52] FMU ARQ Group[11] Status: 0x40",
            "",
            "@ EVT2",
            "[CR-52] fmutest flt_ecc 0",
            "[CR-52] [TX] FAULT[357]: 0x1",
            "[CR-52] fmutest arq 11",
            "[CR-52] FMU ARQ Group[11] Status: 0x20",
            "",
            "FMU ARQ Group[11] Status \uc5d0 0x20\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc73c\uba74 \uc815\uc0c1 \ub3d9\uc791 \uc784."
        ]
    },
    {
        "Number": 149,
        "TC Number": "TC-SFI-AND-0007",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command",
            "# sficli fmutest flt_ecc 0",
            "# sficli fmutest arq 11",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            " @ EVT0/1",
            "[CR-52] fmutest flt_ecc 0",
            "[CR-52] [TX] FAULT[358]: 0x1",
            "[CR-52] fmutest arq 11",
            "[CR-52] FMU ARQ Group[11] Status: 0x40",
            ""
        ]
    },
    {
        "Number": 150,
        "TC Number": "TC-SFI-LIN-0008",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command",
            "$ sficli sfilib dram state",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sfilib dram state [CR-52] SFILIB|: DRAM State : Valid"
        ]
    },
    {
        "Number": 151,
        "TC Number": "TC-SFI-AND-0008",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command ",
            "$ sficli sfilib dram state",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sfilib dram state [CR-52] SFILIB|: DRAM State : Valid"
        ]
    },
    {
        "Number": 152,
        "TC Number": "TC-SFI-LIN-0009",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1)\u00a0Type the command",
            "# sficli sfilib baaw 0 info",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sfilib baaw 0 info",
            "[CR-52] SFILIB|: BAAW Window for DRAM Region 0 : Enabled",
            "[CR-52] SFILIB|: - SFI Address : 0x80000000 - 0x84ffffff",
            "[CR-52] SFILIB|: - System Address : 0xf6600000 - 0xfb3fffff"
        ]
    },
    {
        "Number": 153,
        "TC Number": "TC-SFI-AND-0009",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1)\u00a0Type the command",
            "$ sficli sfilib baaw 0 info",
            "$ dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sfilib baaw 0 info",
            "[CR-52] SFILIB|: BAAW Window for DRAM Region 0 : Enabled",
            "[CR-52] SFILIB|: - SFI Address : 0x80000000 - 0x84ffffff",
            "[CR-52] SFILIB|: - System Address : 0xf6600000 - 0xfb3fffff"
        ]
    },
    {
        "Number": 154,
        "TC Number": "TC-SFI-LIN-0010",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli sfrmon start all",
            "$ sficli sfrmon run",
            "$ sficli sfrmon status",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sfrmon start all",
            "[CR-52] SfrMon Monitor Start All",
            "[CR-52] sfrmon run",
            "[CR-52] SfrMon Monitor Run",
            "[CR-52] sfrmon status",
            "[CR-52] SfrMon Monitor Status (cnt:0)"
        ]
    },
    {
        "Number": 155,
        "TC Number": "TC-SFI-AND-0010",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 156,
        "TC Number": "TC-SFI-LIN-0011",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) LK command \uc785\ub825 \ud6c4\uc5d0 \ud14c\uc2a4\ud2b8 \ud574\uc57c \ud568.",
            "    ] sfi enable_ecc",
            "      sfi intmem ecc status: 1",
            "2) Type the command in Linux shell",
            "$ sficli sftst post",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[Bare Linux]",
            "[   25.215978] [CR-52] sftst post",
            "[   25.220404] [CR-52] POST ONE STATUS : TEST PASS",
            "[   25.220439] [CR-52] POST ONE TEST RESULT : 0x0",
            "[   25.220449] [CR-52] WDT POST     : PASSED",
            "[   25.220458] [CR-52] DCLS POST    : PASSED",
            "[   25.220470] [CR-52] VOLMON POST  : PASSED",
            "[   25.220479] [CR-52] FMU POST     : PASSED",
            "[   25.220488] [CR-52] INTMEM POST  : PASSED",
            "[   25.220497] [CR-52] XSPI POST    : PASSED",
            "[   25.220506] [CR-52] TMU POST     : PASSED",
            "[   25.220515] [CR-52] WDT_CRC POST : PASSED",
            "[   25.220524] [CR-52] SCI POST     : PASSED",
            "[   25.220533] [CR-52] SFI ECC POST : PASSED",
            "[   25.220542] [CR-52] HOST ECC POST : PASSED",
            "",
            "[Bare Android]",
            "[   52.398171] [CR-52] sftst post\\x0a",
            "[   52.405815] [CR-52] POST ONE STATUS : TEST PASS",
            "[   52.405855] [CR-52] POST ONE TEST RESULT : 0x0",
            "[   52.405865] [CR-52] WDT POST     : PASSED",
            "[   52.405874] [CR-52] DCLS POST    : PASSED",
            "[   52.405886] [CR-52] VOLMON POST  : PASSED",
            "[   52.405895] [CR-52] FMU POST     : PASSED",
            "[   52.405904] [CR-52] INTMEM POST  : PASSED",
            "[   52.405914] [CR-52] XSPI POST    : PASSED",
            "[   52.405923] [CR-52] TMU POST     : PASSED",
            "[   52.405932] [CR-52] WDT_CRC POST : PASSED",
            "[   52.405941] [CR-52] SCI POST     : PASSED",
            "[   52.405950] [CR-52] SFI ECC POST : PASSED",
            "[   52.405959] [CR-52] HOST ECC POST : PASSED",
            "",
            "[Linux-VM]",
            "[  141.740228] [CR-52] sftst post",
            "[  141.748458] [CR-52] POST ONE STATUS : TEST PASS",
            "[  141.748490] [CR-52] POST ONE TEST RESULT : 0x0",
            "[  141.748501] [CR-52] WDT POST     : PASSED",
            "[  141.748512] [CR-52] DCLS POST    : PASSED",
            "[  141.748522] [CR-52] VOLMON POST  : PASSED",
            "[  141.748533] [CR-52] FMU POST     : PASSED",
            "[  141.748542] [CR-52] INTMEM POST  : PASSED",
            "[  141.748551] [CR-52] XSPI POST    : PASSED",
            "[  141.748560] [CR-52] TMU POST     : PASSED",
            "[  141.748569] [CR-52] WDT_CRC POST : PASSED",
            "[  141.748578] [CR-52] SCI POST     : PASSED",
            "[  141.748586] [CR-52] SFI ECC POST : PASSED",
            "[  141.748596] [CR-52] HOST ECC POST : PASSED"
        ]
    },
    {
        "Number": 157,
        "TC Number": "TC-SFI-AND-0011",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 158,
        "TC Number": "TC-SFI-LIN-0012",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli sftst olt",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] sftst olt",
            "[CR-52] DRAM ST STATUS: TEST PASS",
            "[CR-52] SFMPU ST STATUS: TEST PASS"
        ]
    },
    {
        "Number": 159,
        "TC Number": "TC-SFI-AND-0012",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 160,
        "TC Number": "TC-SFI-LIN-0013",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli stlm status",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] stlm status",
            "[CR-52] STATUS: DONE \u2026",
            "[CR-52] FAILURE MODE: Not Valid"
        ]
    },
    {
        "Number": 161,
        "TC Number": "TC-SFI-AND-0013",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 162,
        "TC Number": "TC-SFI-LIN-0014",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli tmu",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "\"[CR-52] Probe0 fault injected : Y\" log is shown",
            "ex)",
            "[CR-52] tmu",
            "[CR-52] TMU init confirmed",
            "[CR-52] TMU Emulation mode to fault injection",
            "[CR-52] TMU Probe 0 Interrupt Enable 1 :",
            "[CR-52] TMU Probe 0 Interrupt Pending 1 :",
            "[CR-52] Probe0 fault injected : Y",
            "[CR-52] TMU Probe 1 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 2 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 3 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 4 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 5 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 6 Interrupt Enable 0 :",
            "[CR-52] TMU Probe 7 Interrupt Enable 0 :"
        ]
    },
    {
        "Number": 163,
        "TC Number": "TC-SFI-AND-0014",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 164,
        "TC Number": "TC-SFI-LIN-0015",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli usi uart",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "\"test pass\" is shown",
            "[CR-52] usi uart",
            "[CR-52] 729 bytes sent, 729 bytes received",
            "[CR-52] test pass"
        ]
    },
    {
        "Number": 165,
        "TC Number": "TC-SFI-AND-0015",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 166,
        "TC Number": "TC-SFI-LIN-0016",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli usi spi",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "\"test pass\" is shown",
            "[CR-52] usi spi",
            "[CR-52] 468 bytes sent, 468 bytes received",
            "[CR-52] test pass"
        ]
    },
    {
        "Number": 167,
        "TC Number": "TC-SFI-AND-0016",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 168,
        "TC Number": "TC-SFI-LIN-0017",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "1) Type the command",
            "# sficli volmon",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] volmon",
            "[CR-52] VOLMON init confirmed",
            "[CR-52] ADD0 CTRL register: xxxx",
            "[CR-52] ADD0 test success",
            "[CR-52] ADD1 CTRL register:",
            "[CR-52] ADD1 test success",
            "[CR-52] ADD2 CTRL register: xxxx",
            "[CR-52] ADD2 test success",
            "[CR-52] ADD3 CTRL register: xxxx",
            "[CR-52] ADD3 test success",
            "[CR-52] ADD4 CTRL register: xxxx",
            "[CR-52] ADD4 test success",
            "[CR-52] ADD5 CTRL register: xxxx",
            "[CR-52] ADD5 test success",
            "[CR-52] ADD0 CTRL register: xxxx",
            "[CR-52] ADD0 test success",
            "[CR-52] ADD1 CTRL register: xxxx",
            "[CR-52] ADD1 test success",
            "[CR-52] Block mon error cnt sum 0",
            "[CR-52] Reference for OtpValue hw(0:misc ,1:sfi)",
            "[CR-52] -OtpValue 0 index:0 xxxx",
            "[CR-52] -OtpValue 0 index:1 xxxx",
            "[CR-52] -OtpValue 0 index:2 xxxx",
            "[CR-52] -OtpValue 1 index:0 xxxx"
        ]
    },
    {
        "Number": 169,
        "TC Number": "TC-SFI-AND-0017",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "O",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Type the command",
            "$ su",
            "# sficli volmon",
            "# dmesg |\u00a0grep\u00a0CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] volmon",
            "[CR-52] VOLMON init confirmed",
            "[CR-52] ADD0 CTRL register: xxxx",
            "[CR-52] ADD0 test success",
            "[CR-52] ADD1 CTRL register:",
            "[CR-52] ADD1 test success",
            "[CR-52] ADD2 CTRL register: xxxx",
            "[CR-52] ADD2 test success",
            "[CR-52] ADD3 CTRL register: xxxx",
            "[CR-52] ADD3 test success",
            "[CR-52] ADD4 CTRL register: xxxx",
            "[CR-52] ADD4 test success",
            "[CR-52] ADD5 CTRL register: xxxx",
            "[CR-52] ADD5 test success",
            "[CR-52] ADD0 CTRL register: xxxx",
            "[CR-52] ADD0 test success",
            "[CR-52] ADD1 CTRL register: xxxx",
            "[CR-52] ADD1 test success",
            "[CR-52] Block mon error cnt sum 0",
            "[CR-52] Reference for OtpValue hw(0:misc ,1:sfi)",
            "[CR-52] -OtpValue 0 index:0 xxxx",
            "[CR-52] -OtpValue 0 index:1 xxxx",
            "[CR-52] -OtpValue 0 index:2 xxxx",
            "[CR-52] -OtpValue 1 index:0 xxxx"
        ]
    },
    {
        "Number": 170,
        "TC Number": "TC-SFI-LIN-0018",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "* Need to check the test\u00a0sequence"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 171,
        "TC Number": "TC-SFI-AND-0018",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": [
            "[PASS]\u00a0"
        ]
    },
    {
        "Number": 172,
        "TC Number": "TC-SFI-LIN-0019",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli cantest lp_i",
            "$ sficli cantest ctrl_start",
            "$ sficli cantest tx 14",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Below logs are shown,  RX PDU Data's 1st values are count for \"sfcli cantest tx xx\" command, so, it can be changed.",
            "cantest lp_i",
            "cantest ctrl_start",
            "CAN Status is changed at Controller[0]",
            "Current CAN Status is STARTED",
            "CAN Status is changed at Controller[1]",
            "Current CAN Status is STARTED",
            "cantest tx 14",
            "TX PDU ID: 0xe",
            "CanIf_RxIndication",
            "CAN ID: 0x7ff",
            "Controller ID: 0x0",
            "HOH: 4",
            "RX PDU Data Length: 8",
            "RX PDU Data:",
            "0xXX 0x23 0x45 0x67 0x89 0xab 0xcd 0xef"
        ]
    },
    {
        "Number": 173,
        "TC Number": "TC-SFI-AND-0019",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Android shell",
            "# sficli cantest lp_i",
            "# sficli cantest ctrl_start",
            "# sficli cantest tx 14",
            "# dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "cantest lp_i",
            "cantest ctrl_start",
            "CAN Status is changed at Controller[0]",
            "Current CAN Status is STARTED",
            "CAN Status is changed at Controller[1]",
            "Current CAN Status is STARTED",
            "cantest tx 14",
            "TX PDU ID: 0xe",
            "CanIf_RxIndication",
            "CAN ID: 0x7ff",
            "Controller ID: 0x0",
            "HOH: 4",
            "RX PDU Data Length: 8",
            "RX PDU Data:",
            "0x1 0x23 0x45 0x67 0x89 0xab 0xcd 0xef\\"
        ]
    },
    {
        "Number": 174,
        "TC Number": "TC-SFI-LIN-0020",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You need to have CANoe machine",
            "1) Type the command in Linux shell",
            "$ sficli cantest ctrl_start",
            "$ sficli cantest tx 10",
            "$ sficli cantest tx 11",
            "$ sficli cantest tx 12",
            "$ sficli cantest tx 13",
            "$ sficli cantest tx 14",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "cantest tx 10",
            "TX PDU ID: 0xa",
            "cantest tx 11",
            "TX PDU ID: 0xb",
            "cantest tx 12",
            "TX PDU ID: 0xc",
            "TX Hardware Oject Address: 0xfc0c3cb8",
            "TX PDU ID: 0xc",
            "cantest tx 13",
            "TX PDU ID: 0xd",
            "TX Hardware Oject Address: 0xfc0c4018",
            "TX PDU ID: 0xd",
            "cantest tx 14",
            "TX PDU ID: 0xe"
        ]
    },
    {
        "Number": 175,
        "TC Number": "TC-SFI-AND-0020",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 176,
        "TC Number": "TC-SFI-LIN-0021",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You need to have CANoe machine",
            "",
            "1) Type the command in Linux shell",
            "$ sficli cantest ctrl_start",
            "$ sficli cantest period_tx 1",
            "$ sficli cantest period_tx 0",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "cantest period_tx 1",
            "cantest period_tx 1",
            "TX PDU ID: 0xc",
            "TX Hardware Oject Address: 0xfc0c3cb8",
            "TX PDU ID: 0xd",
            "TX Hardware Oject Address: 0xfc0c4018",
            "TX PDU ID: 0xa",
            "TX PDU ID: 0xb",
            "TX PDU ID: 0xc",
            "TX PDU ID: 0xd",
            "TX PDU ID: 0xe",
            "TX PDU ID: 0xf",
            "TX PDU ID: 0x10",
            "TX PDU ID: 0x11",
            "TX PDU ID: 0x12",
            "TX PDU ID: 0x13",
            "TX PDU ID: 0xc",
            "TX Hardware Oject Address: 0xfc0c3cb8",
            "TX PDU ID: 0xd",
            "TX Hardware Oject Address: 0xfc0c4018",
            "TX PDU ID: 0xa",
            "TX PDU ID: 0xb",
            "TX PDU ID: 0xc",
            "TX PDU ID: 0xd",
            "TX PDU ID: 0xe",
            "TX PDU ID: 0xf",
            "TX PDU ID: 0x10",
            "TX PDU ID: 0x11",
            "TX PDU ID: 0x12",
            "TX PDU ID: 0x13",
            "TX PDU ID: 0xc"
        ]
    },
    {
        "Number": 177,
        "TC Number": "TC-SFI-AND-0021",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 178,
        "TC Number": "TC-SFI-LIN-0022",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You need to have CANoe machine",
            "",
            "1) Type the command in Linux shell",
            "$ sficli cantest ctrl_start",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "CanIf_RxIndication",
            "CAN ID: 0x15a",
            "Controller ID: 0x0",
            "HOH: 0",
            "RX PDU Data Length: 8",
            "RX PDU Data:",
            "0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8"
        ]
    },
    {
        "Number": 179,
        "TC Number": "TC-SFI-AND-0022",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 180,
        "TC Number": "TC-SFI-LIN-0023",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0You need to have CANoe machine",
            "",
            "1) Type the command in Linux shell",
            "$ sficli cantest ctrl_start",
            "$ sficli cantest br 1",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] cantest ctrl_start",
            "[CR-52] CAN Status is changed at Controller[0]",
            "[CR-52] Current CAN Status is STARTED",
            "[CR-52] CAN Status is changed at Controller[1]",
            "[CR-52] Current CAN Status is STARTED",
            "[CR-52] cantest br 1",
            "[CR-52] CAN Status is changed at Controller[0]",
            "[CR-52] Current CAN Status is STOPPED",
            "[CR-52] CAN Status is changed at Controller[0]",
            "[CR-52] Current CAN Status is STARTED"
        ]
    },
    {
        "Number": 181,
        "TC Number": "TC-SFI-AND-0023",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 182,
        "TC Number": "TC-SFI-LIN-0024",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli diotest channel",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] diotest channel",
            "[CR-52] Dio Read/Write Channel test",
            "[CR-52] diotest channel Done PASS"
        ]
    },
    {
        "Number": 183,
        "TC Number": "TC-SFI-AND-0024",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 184,
        "TC Number": "TC-SFI-LIN-0025",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "1) Type the command in Linux shell",
            "$ sficli diotest flip",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] diotest flip",
            "[CR-52] Dio Channel Flip test",
            "[CR-52] Flip Pass"
        ]
    },
    {
        "Number": 185,
        "TC Number": "TC-SFI-AND-0025",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 186,
        "TC Number": "TC-SFI-LIN-0026",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli diotest onegroup",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] diotest onegroup",
            "[CR-52] Dio Channel group write/read Test",
            "[CR-52] Channel Group1 Pass"
        ]
    },
    {
        "Number": 187,
        "TC Number": "TC-SFI-AND-0026",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 194,
        "TC Number": "TC-SFI-LIN-0030",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli diotest port",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] diotest port",
            "[CR-52] Dio Read/Write Port test",
            "[CR-52] Port Pass"
        ]
    },
    {
        "Number": 195,
        "TC Number": "TC-SFI-AND-0030",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 196,
        "TC Number": "TC-SFI-LIN-0031",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "# ifconfig eth0 192.168.1.166 netmask 255.255.255.0 up",
            "# ethtool --set-eee eth0 eee off",
            "# route add default gw 192.168.1.1",
            "# echo \"nameserver 203.248.252.2\" >> /etc/resolv.conf",
            "# sficli eth start",
            "# sficli eth rxcb",
            "# dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] eth start",
            "[CR-52] infra init done",
            "[CR-52] Eth Safety Callback is called ModuleId:88, InstanceId:0, ApiId:4, ErrorId:2",
            "[CR-52] Eth_Init called",
            "[CR-52] Eth_SetControllerMode MODE ACTIVE called",
            "[CR-52] do init done",
            "[CR-52] timer init done",
            "[CR-52] eth rxcb",
            "[CR-52] Controller is already active",
            "[CR-52] loopback enabled",
            "[CR-52] Eth_ProvideTxBuffer called ret:0",
            "[CR-52] Eth_Transmit called 2048 frame type",
            "[CR-52] Eth_Receive called: rx status 0",
            "[CR-52] Total 1 packet received .",
            "[CR-52] Eth_ProvideTxBuffer called: bufIdx:1, buf_length:100",
            "[CR-52] Eth_Transmit called 2048 frame type",
            "[CR-52] Eth_Receive called: rx status 0",
            "[CR-52] Total 1 packet received .",
            "[CR-52] test result : PASS.",
            "",
            "test result: PASS \ub9cc \ud655\uc778\ud558\uba74 \ub428.",
            ""
        ]
    },
    {
        "Number": 197,
        "TC Number": "TC-SFI-AND-0031",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 198,
        "TC Number": "TC-SFI-LIN-0032",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "[pre-condition]",
            "1) eth0 ethernet port is connected to Host PC.",
            "2) Check Host PC's IP addr --> [ipv4 addr]",
            "ex) Host PC's ip : 192.168.1.2",
            "",
            "Type the command in Linux shell",
            "# ifconfig eth0 192.168.1.166 netmask 255.255.255.0 up",
            "# ethtool --set-eee eth0 eee off",
            "# route add default gw 192.168.1.1",
            "# echo \"nameserver 203.248.252.2\" >> /etc/resolv.conf",
            "# sficli eth start",
            "# sficli eth arp [ipv4 addr]",
            "ex) sfcli eth arp 192.168.1.2",
            "# dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] eth start",
            "[CR-52] infra init done",
            "[CR-52] Eth Safety Callback is called ModuleId:88, InstanceId:0, ApiId:4, ErrorId:2",
            "[CR-52] Eth_Init called",
            "[CR-52] Eth_SetControllerMode MODE ACTIVE called",
            "[CR-52] do init done",
            "[CR-52] timer init done",
            "...",
            "[CR-52] eth arp xxx.xxx.xxx.xxx",
            "[CR-52] Eth_Transmit",
            "[CR-52] received 1 frames",
            "[CR-52] Test PASS: 1 frame received",
            "",
            "test result: PASS \ub9cc \ud655\uc778\ud558\uba74 \ub428."
        ]
    },
    {
        "Number": 199,
        "TC Number": "TC-SFI-AND-0032",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 200,
        "TC Number": "TC-SFI-LIN-0033",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli flstst pit",
            "$ sficli flstst erase",
            "$ sficli flstst blankcheck",
            "$ sficli flstst write",
            "$ sficli flstst read",
            "$ sficli flstst compare",
            "$ dmesg | grep CR-52",
            "",
            " ** Flash \uba54\ubaa8\ub9ac\uac00 \uc7a5\ucc29\ub41c Socket \uc774 \uc788\uc5b4\uc57c \ud568.",
            "   \uc18c\ucf13\uc774 \uc5c6\uc73c\uba74 \ubb34\uc870\uac74 PASS \ucc98\ub9ac\ud558\ub3c4\ub85d \uad6c\ud604\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c NA \ucc98\ub9ac \ud574\uc57c \ud568."
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "root@euto-v9-discovery:~# dmesg | grep CR-52",
            "[CR-52] flstst pit",
            "[CR-52] PASS",
            "[CR-52] flstst erase",
            "[CR-52] Fls Erase Start",
            "[CR-52] Fls Erase Done",
            "[CR-52] flstst blankcheck",
            "[CR-52] Fls BlankCheck Start",
            "[CR-52] Fls BlankCheck Done",
            "[CR-52] flstst write",
            "[CR-52] Fls Write Start",
            "[CR-52] Fls Write Done",
            "[CR-52] flstst read",
            "[CR-52] Fls Read Start",
            "[CR-52] Fls Read Done",
            "[CR-52] flstst compare",
            "[CR-52] Fls Compare Start",
            "[CR-52] Fls Compare Done"
        ]
    },
    {
        "Number": 201,
        "TC Number": "TC-SFI-AND-0033",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 202,
        "TC Number": "TC-SFI-LIN-0034",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli gpt oneshot",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] gpt oneshot",
            "[CR-52] gpt ch3 time tick elapsed.. 3",
            "[CR-52] gpt ch3 time tick elapsed.. 4",
            "[CR-52] gpt ch3 time tick elapsed.. 5",
            "[CR-52] gpt ch3 time tick elapsed.. 6",
            "[CR-52] gpt ch3 time tick elapsed.. 7",
            "[CR-52] gpt ch3 time tick elapsed.. 8",
            "[CR-52] gpt ch3 time tick elapsed.. 9",
            "[CR-52] gpt ch3 time tick elapsed.. 10",
            "[CR-52] test passed : PASS.",
            "[CR-52] test passed : PASS."
        ]
    },
    {
        "Number": 203,
        "TC Number": "TC-SFI-AND-0034",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 204,
        "TC Number": "TC-SFI-LIN-0035",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli gpt 1us",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] gpt 1us",
            "[CR-52] CurTime: xxs xxx ms xxx us",
            "ex)",
            "[CR-52] CurTime: 23s 729ms 145us",
            "[CR-52] CurTime: 23s 729ms 160us",
            "[CR-52] CurTime: 23s 729ms 175us",
            "[CR-52] CurTime: 23s 729ms 185us",
            "[CR-52] CurTime: 23s 729ms 200us",
            "[CR-52] CurTime: 23s 729ms 210us",
            "[CR-52] CurTime: 23s 729ms 225us",
            "[CR-52] CurTime: 23s 729ms 235us",
            "[CR-52] CurTime: 23s 729ms 250us"
        ]
    },
    {
        "Number": 205,
        "TC Number": "TC-SFI-AND-0035",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 206,
        "TC Number": "TC-SFI-LIN-0036",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli mcutest reason",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] mcutest reason",
            "[CR-52] Mcu Get Reset Information Start",
            "[CR-52] Reset Value : 80000000",
            "[CR-52] Reset Reason : 0"
        ]
    },
    {
        "Number": 207,
        "TC Number": "TC-SFI-AND-0036",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 208,
        "TC Number": "TC-SFI-LIN-0037",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli mcutest dram",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] mcutest dram",
            "[CR-52] Mcu Get Dram Status Start",
            "[CR-52] Dram Status : 1"
        ]
    },
    {
        "Number": 209,
        "TC Number": "TC-SFI-AND-0037",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 210,
        "TC Number": "TC-SFI-LIN-0038",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$\u00a0su ## Android only",
            "# sficli mcutest sector",
            "# dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] mcutest sector",
            "[CR-52] Mcu Set RamSector Start",
            "[CR-52] RamSector Pass"
        ]
    },
    {
        "Number": 211,
        "TC Number": "TC-SFI-AND-0038",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 212,
        "TC Number": "TC-SFI-LIN-0039",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli mcutest clock",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "1) In case of BL",
            "[  117.219320] [CR-52] mcutest clock",
            "[  117.225524] [CR-52] Mcu Get Clock Information Start",
            "[  117.225531] [CR-52] Pass",
            "",
            "2) In case of LA",
            "[  492.013642] [CR-52] Mcu Set RamSector Start",
            "[  492.013659] [CR-52] RamSector Pass",
            "[  516.572935] [CR-52] mcutest clock",
            "[  516.574061] [CR-52] Mcu Get Clock Information Start",
            "[  516.574077] [CR-52] Pass"
        ]
    },
    {
        "Number": 213,
        "TC Number": "TC-SFI-LIN-0040",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "$ modprobe sfi_ipc_test",
            "$ sficli mailbox drv",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[CR-52] mailbox drv",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 1 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 2 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 3 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 4 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 5 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 6 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 7 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 8 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 9 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 10 pass",
            "[CR-52] [host_ipc_test] Mailbox_HostIpcTest stage : 11 finish"
        ]
    },
    {
        "Number": 214,
        "TC Number": "TC-SFI-LIN-0041",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$ sficli mailbox sfiopen",
            "$ sficli -n mailbox sfiopen",
            "$ sficli mailbox sfisend",
            "$ sficli -n mailbox sfirecv",
            "$ sficli -n mailbox sfisend",
            "$ sficli mailbox sfirecv",
            "$ dmesg | grep CR-52"
        ],
        "Criterion": [
            "[CR-52] mailbox sfiopen",
            "[CR-52 Core1] mailbox sfiopen",
            "[CR-52] mailbox sfisend",
            "[CR-52 Core1] mailbox sfirecv",
            "[CR-52 Core1] RECV : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,",
            "[CR-52 Core1] mailbox sfisend",
            "[CR-52] mailbox sfirecv",
            "[CR-52] RECV : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,"
        ]
    },
    {
        "Number": 215,
        "TC Number": "TC-SFI-LIN-0042",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$\u00a0sficli porttest mode",
            "$\u00a0dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] porttest mode",
            "[CR-52] SetPinMode test",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 216,
        "TC Number": "TC-SFI-AND-0039",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 217,
        "TC Number": "TC-SFI-LIN-0043",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$\u00a0sficli porttest pud",
            "$\u00a0dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] porttest pud",
            "[CR-52] Pull-up/down test",
            "[CR-52] PASS"
        ]
    },
    {
        "Number": 218,
        "TC Number": "TC-SFI-AND-0040",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "manual",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 219,
        "TC Number": "TC-SFI-LIN-0044",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "auto",
        "Command": [
            "Type the command in Linux shell",
            "$\u00a0sficli ramtsttest full",
            "$\u00a0dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "[CR-52] ramtsttest full",
            "[CR-52] RamTst Test Start",
            "[CR-52] PASS",
            "[CR-52] RamTst Test Done"
        ]
    },
    {
        "Number": 220,
        "TC Number": "TC-SFI-AND-0041",
        "Category": "SFI Solution",
        "Linux": "X",
        "Android": "X",
        "LinuxAndroid": "X",
        "Mode": "auto",
        "Command": [
            "N/A"
        ],
        "Criterion": []
    },
    {
        "Number": 221,
        "TC Number": "TC-SFI-LIN-0045",
        "Category": "SFI Solution",
        "Linux": "O",
        "Android": "O",
        "LinuxAndroid": "O",
        "Mode": "manual",
        "Command": [
            "Type the command in Linux shell",
            "$\u00a0sficli wdg fired",
            "$\u00a0dmesg | grep CR-52"
        ],
        "Criterion": [
            "[PASS]\u00a0",
            "Final \"test result : PASS.\" is shown.",
            "'wdg test fast mode overflow'  can be shown several times.",
            "[CR-52] wdg fired",
            "[CR-52] Wdg_Init Calls.",
            "[CR-52] Wdg Off Mode.",
            "[CR-52] slow_mode Calls.",
            "[CR-52] wdg test slow mode overflow..",
            "[CR-52] [TX] FAULT[383]: 0x1",
            "[CR-52] wdg test slow mode overflow..",
            "[CR-52] [TX] FAULT[383]: 0x1",
            "[CR-52] Wdg is fired..",
            "[CR-52] test result : PASS."
        ]
    }
]